/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XMXCToken,
  XMXCTokenInterface,
} from "../../../../contracts/token/XMXCToken.sol/XMXCToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506116b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb14610276578063d505accf14610289578063da8c229e1461029c578063dd62ed3e146102bf578063e0dba60f146102d2578063f2fde38b146102e557600080fd5b80637ecebe00146102255780638129fc1c146102385780638da5cb5b1461024057806395d89b411461025b578063a457c2d71461026357600080fd5b80633644e5151161010a5780633644e515146101bc57806339509351146101c4578063449a52f8146101d75780635d79343d146101ec57806370a08231146101f4578063715018a61461021d57600080fd5b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018857806323b872dd1461019a578063313ce567146101ad575b600080fd5b61014f6102f8565b60405161015c91906112d3565b60405180910390f35b61017861017336600461133d565b61038a565b604051901515815260200161015c565b6068545b60405190815260200161015c565b6101786101a8366004611367565b6103a4565b6040516012815260200161015c565b61018c6103c8565b6101786101d236600461133d565b6103d7565b6101ea6101e536600461133d565b6103f9565b005b6101ea61047c565b61018c6102023660046113a3565b6001600160a01b031660009081526066602052604090205490565b6101ea6104c7565b61018c6102333660046113a3565b6104d9565b6101ea6104f7565b6033546040516001600160a01b03909116815260200161015c565b61014f61066f565b61017861027136600461133d565b61067e565b61017861028436600461133d565b6106f9565b6101ea6102973660046113c5565b610707565b6101786102aa3660046113a3565b60656020526000908152604090205460ff1681565b61018c6102cd366004611438565b61086b565b6101ea6102e036600461146b565b610896565b6101ea6102f33660046113a3565b6108fd565b606060698054610307906114a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610333906114a7565b80156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b5050505050905090565b600033610398818585610996565b60019150505b92915050565b6000336103b2858285610aba565b6103bd858585610b34565b506001949350505050565b60006103d2610cdf565b905090565b6000336103988185856103ea838361086b565b6103f491906114db565b610996565b3360009081526065602052604090205460ff1661046e5760405162461bcd60e51b815260206004820152602860248201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604482015267373a3937b63632b960c11b60648201526084015b60405180910390fd5b6104788282610d5a565b5050565b600054610100900460ff166104a35760405162461bcd60e51b8152600401610465906114fc565b336000908152606560205260409020805460ff191660011790556104c5610e1b565b565b6104cf610e4a565b6104c56000610ea4565b6001600160a01b038116600090815260cc602052604081205461039e565b600054610100900460ff16158080156105175750600054600160ff909116105b806105315750303b158015610531575060005460ff166001145b6105945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610465565b6000805460ff1916600117905580156105b7576000805461ff0019166101001790555b6105bf61047c565b61060160405180604001604052806004815260200163584d584360e01b81525060405180604001604052806004815260200163584d584360e01b815250610ef6565b61062660405180604001604052806004815260200163584d584360e01b815250610f27565b801561066c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060606a8054610307906114a7565b6000338161068c828661086b565b9050838110156106ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610465565b6103bd8286868403610996565b600033610398818585610b34565b834211156107575760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610465565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107868c610f71565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107e182610f99565b905060006107f182878787610fe7565b9050896001600160a01b0316816001600160a01b0316146108545760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610465565b61085f8a8a8a610996565b50505050505050505050565b6001600160a01b03918216600090815260676020908152604080832093909416825291909152205490565b61089e610e4a565b6001600160a01b038216600081815260656020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b610905610e4a565b6001600160a01b03811661096a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610465565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561066c81610ea4565b6001600160a01b0383166109f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610465565b6001600160a01b038216610a595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610465565b6001600160a01b0383811660008181526067602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ac6848461086b565b90506000198114610b2e5781811015610b215760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610465565b610b2e8484848403610996565b50505050565b6001600160a01b038316610b985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610465565b6001600160a01b038216610bfa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610465565b6001600160a01b03831660009081526066602052604090205481811015610c725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610465565b6001600160a01b0380851660008181526066602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cd29086815260200190565b60405180910390a3610b2e565b60006103d27f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610d0e60985490565b6099546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6001600160a01b038216610db05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610465565b8060686000828254610dc291906114db565b90915550506001600160a01b0382166000818152606660209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff16610e425760405162461bcd60e51b8152600401610465906114fc565b6104c5611014565b6033546001600160a01b031633146104c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f1d5760405162461bcd60e51b8152600401610465906114fc565b6104788282611044565b600054610100900460ff16610f4e5760405162461bcd60e51b8152600401610465906114fc565b61066c81604051806040016040528060018152602001603160f81b815250611084565b6001600160a01b038116600090815260cc602052604090208054600181018255905b50919050565b600061039e610fa6610cdf565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610ff8878787876110c5565b9150915061100581611189565b5095945050505050565b505050565b600054610100900460ff1661103b5760405162461bcd60e51b8152600401610465906114fc565b6104c533610ea4565b600054610100900460ff1661106b5760405162461bcd60e51b8152600401610465906114fc565b606961107783826115ab565b50606a61100f82826115ab565b600054610100900460ff166110ab5760405162461bcd60e51b8152600401610465906114fc565b815160209283012081519190920120609891909155609955565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110fc5750600090506003611180565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611150573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661117957600060019250925050611180565b9150600090505b94509492505050565b600081600481111561119d5761119d61166b565b036111a55750565b60018160048111156111b9576111b961166b565b036112065760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610465565b600281600481111561121a5761121a61166b565b036112675760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610465565b600381600481111561127b5761127b61166b565b0361066c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610465565b600060208083528351808285015260005b81811015611300578581018301518582016040015282016112e4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461133857600080fd5b919050565b6000806040838503121561135057600080fd5b61135983611321565b946020939093013593505050565b60008060006060848603121561137c57600080fd5b61138584611321565b925061139360208501611321565b9150604084013590509250925092565b6000602082840312156113b557600080fd5b6113be82611321565b9392505050565b600080600080600080600060e0888a0312156113e057600080fd5b6113e988611321565b96506113f760208901611321565b95506040880135945060608801359350608088013560ff8116811461141b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561144b57600080fd5b61145483611321565b915061146260208401611321565b90509250929050565b6000806040838503121561147e57600080fd5b61148783611321565b91506020830135801515811461149c57600080fd5b809150509250929050565b600181811c908216806114bb57607f821691505b602082108103610f9357634e487b7160e01b600052602260045260246000fd5b8082018082111561039e57634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b601f82111561100f57600081815260208120601f850160051c810160208610156115845750805b601f850160051c820191505b818110156115a357828155600101611590565b505050505050565b815167ffffffffffffffff8111156115c5576115c5611547565b6115d9816115d384546114a7565b8461155d565b602080601f83116001811461160e57600084156115f65750858301515b600019600386901b1c1916600185901b1785556115a3565b600085815260208120601f198616915b8281101561163d5788860151825594840194600190910190840161161e565b508582101561165b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea26469706673582212202c3bf07137403237583ca6e1954f3c758535be25047ad586ec54db97ff16ca1f64736f6c63430008120033";

type XMXCTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XMXCTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XMXCToken__factory extends ContractFactory {
  constructor(...args: XMXCTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XMXCToken> {
    return super.deploy(overrides || {}) as Promise<XMXCToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XMXCToken {
    return super.attach(address) as XMXCToken;
  }
  override connect(signer: Signer): XMXCToken__factory {
    return super.connect(signer) as XMXCToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XMXCTokenInterface {
    return new utils.Interface(_abi) as XMXCTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XMXCToken {
    return new Contract(address, _abi, signerOrProvider) as XMXCToken;
  }
}
