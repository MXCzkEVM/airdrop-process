/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMEP1004,
  IMEP1004Interface,
} from "../../../contracts/token/IMEP1004";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "MEP1002TokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "item",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "MEP1002TokenId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "MEP1004TokenIds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "item",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IMEP1004.LocationProof",
        name: "locationProof",
        type: "tuple",
      },
    ],
    name: "NewLocationProof",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_MEP1002TokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_MEP1004TokenIds",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_item",
        type: "string",
      },
    ],
    name: "LocationProofs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getSNCode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_item",
        type: "string",
      },
    ],
    name: "latestLocationProofs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "MEP1002TokenId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "MEP1004TokenIds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "item",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct IMEP1004.LocationProof",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMEP1004__factory {
  static readonly abi = _abi;
  static createInterface(): IMEP1004Interface {
    return new utils.Interface(_abi) as IMEP1004Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMEP1004 {
    return new Contract(address, _abi, signerOrProvider) as IMEP1004;
  }
}
