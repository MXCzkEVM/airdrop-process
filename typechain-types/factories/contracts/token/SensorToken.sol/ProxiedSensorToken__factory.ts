/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ProxiedSensorToken,
  ProxiedSensorTokenInterface,
} from "../../../../contracts/token/SensorToken.sol/ProxiedSensorToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HALVING_INTERVAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_HALVING_CYCLE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSpecialAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_specialAddresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_specialAddresses",
        type: "address[]",
      },
    ],
    name: "setSpecialAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516128d761004c600039600081816107510152818161079101528181610abf01528181610aff0152610b8e01526128d76000f3fe6080604052600436106101ee5760003560e01c806370a082311161010d578063a457c2d7116100a0578063d505accf1161006f578063d505accf14610512578063da8c229e14610532578063dd62ed3e14610562578063e0dba60f14610582578063f2fde38b146105a257600080fd5b8063a457c2d714610499578063a7ecd0ad146104b9578063a9059cbb146104db578063abee967c146104fb57600080fd5b80638da5cb5b116100dc5780638da5cb5b1461043057806395d89b4114610458578063a218141b1461046d578063a2e620451461048457600080fd5b806370a08231146103c6578063715018a6146103e65780637ecebe00146103fb5780638aec85421461041b57600080fd5b80633659cfe61161018557806352d1902d1161015457806352d1902d1461036e5780635d05125b146103835780635d79343d1461039a5780635fd9491d146103af57600080fd5b80633659cfe6146102fb578063395093511461031b578063462d0b2e1461033b5780634f1ef2861461035b57600080fd5b80631b8cb0bf116101c15780631b8cb0bf1461029357806323b872dd146102aa578063313ce567146102ca5780633644e515146102e657600080fd5b806306fdde03146101f3578063095ea7b31461021e5780630d261ce01461024e57806318160ddd14610270575b600080fd5b3480156101ff57600080fd5b506102086105c2565b6040516102159190612036565b60405180910390f35b34801561022a57600080fd5b5061023e610239366004612085565b610654565b6040519015158152602001610215565b34801561025a57600080fd5b5061026e61026936600461217d565b61066e565b005b34801561027c57600080fd5b506102856106fb565b604051908152602001610215565b34801561029f57600080fd5b506102856101645481565b3480156102b657600080fd5b5061023e6102c53660046121ba565b610717565b3480156102d657600080fd5b5060405160128152602001610215565b3480156102f257600080fd5b5061028561073d565b34801561030757600080fd5b5061026e6103163660046121f6565b610747565b34801561032757600080fd5b5061023e610336366004612085565b610826565b34801561034757600080fd5b5061026e610356366004612211565b610848565b61026e61036936600461225f565b610ab5565b34801561037a57600080fd5b50610285610b81565b34801561038f57600080fd5b506102856101675481565b3480156103a657600080fd5b5061026e610c34565b3480156103bb57600080fd5b506102856101635481565b3480156103d257600080fd5b506102856103e13660046121f6565b610c7f565b3480156103f257600080fd5b5061026e610cde565b34801561040757600080fd5b506102856104163660046121f6565b610cf0565b34801561042757600080fd5b50610285610d0f565b34801561043c57600080fd5b506097546040516001600160a01b039091168152602001610215565b34801561046457600080fd5b50610208610d78565b34801561047957600080fd5b506102856101685481565b34801561049057600080fd5b5061026e610d87565b3480156104a557600080fd5b5061023e6104b4366004612085565b610de0565b3480156104c557600080fd5b506104ce610e66565b6040516102159190612305565b3480156104e757600080fd5b5061023e6104f6366004612085565b610ec8565b34801561050757600080fd5b506102856101665481565b34801561051e57600080fd5b5061026e61052d366004612352565b610ed6565b34801561053e57600080fd5b5061023e61054d3660046121f6565b60c96020526000908152604090205460ff1681565b34801561056e57600080fd5b5061028561057d3660046123c5565b61103a565b34801561058e57600080fd5b5061026e61059d3660046123ef565b611065565b3480156105ae57600080fd5b5061026e6105bd3660046121f6565b6110cc565b606060cd80546105d19061242b565b80601f01602080910402602001604051908101604052809291908181526020018280546105fd9061242b565b801561064a5780601f1061061f5761010080835404028352916020019161064a565b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b5050505050905090565b600033610662818585611165565b60019150505b92915050565b33600090815260c9602052604090205460ff166106e35760405162461bcd60e51b815260206004820152602860248201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604482015267373a3937b63632b960c11b60648201526084015b60405180910390fd5b80516106f790610169906020840190611f98565b5050565b6000610705611289565b60cc546107129190612475565b905090565b600033610725858285611354565b6107308585856113ce565b60019150505b9392505050565b6000610712611584565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361078f5760405162461bcd60e51b81526004016106da90612488565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107d860008051602061285b833981519152546001600160a01b031690565b6001600160a01b0316146107fe5760405162461bcd60e51b81526004016106da906124d4565b610807816115ff565b6040805160008082526020820190925261082391839190611607565b50565b600033610662818585610839838361103a565b6108439190612475565b611165565b600054610100900460ff16158080156108685750600054600160ff909116105b806108825750303b158015610882575060005460ff166001145b6108e55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106da565b6000805460ff191660011790558015610908576000805461ff0019166101001790555b60008351116109525760405162461bcd60e51b81526020600482015260166024820152750e6e0cac6d2c2d840c2c8c8e4cae6e640d8cadccee8d60531b60448201526064016106da565b61095a610c34565b6109a66040518060400160405280600c81526020016b29b2b739b7b9102a37b5b2b760a11b8152506040518060400160405280600681526020016529a2a729a7a960d11b815250611772565b6109d36040518060400160405280600c81526020016b29b2b739b7b9102a37b5b2b760a11b8152506117a3565b620f424061016355601461016455600a6109ee601282612604565b6109fa9061020d612610565b610a04919061263d565b6101665543610167556101635461016454610a1f9190612610565b610a299043612475565b6101655543610168558251610a4690610169906020860190611f98565b50610a6a82610a576012600a612651565b610a65906302aea540612610565b6117ed565b8015610ab0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610afd5760405162461bcd60e51b81526004016106da90612488565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b4660008051602061285b833981519152546001600160a01b031690565b6001600160a01b031614610b6c5760405162461bcd60e51b81526004016106da906124d4565b610b75826115ff565b6106f782826001611607565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c215760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106da565b5060008051602061285b83398151915290565b600054610100900460ff16610c5b5760405162461bcd60e51b81526004016106da90612660565b33600090815260c960205260409020805460ff19166001179055610c7d6118ba565b565b6001600160a01b038116600090815260ca6020526040812054610169600081548110610cad57610cad6126ab565b6000918252602090912001546001600160a01b039081169084160361066857610cd4611289565b6107369082612475565b610ce66118e9565b610c7d6000611943565b6001600160a01b03811660009081526101306020526040812054610668565b6000610165544310610d215750600090565b6000610163546101675443610d3691906126c1565b610d40919061263d565b6101665490915060005b82811015610d7157610d5d60028361263d565b915080610d69816126d4565b915050610d4a565b5092915050565b606060ce80546105d19061242b565b436101685410610d9357565b6000610d9d611289565b90508015610823574361016881905550610823610169600081548110610dc557610dc56126ab565b6000918252602090912001546001600160a01b0316826117ed565b60003381610dee828661103a565b905083811015610e4e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106da565b610e5b8286868403611165565b506001949350505050565b606061016980548060200260200160405190810160405280929190818152602001828054801561064a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ea1575050505050905090565b6000336106628185856113ce565b83421115610f265760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106da565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610f558c611995565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610fb0826119be565b90506000610fc082878787611a0c565b9050896001600160a01b0316816001600160a01b0316146110235760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106da565b61102e8a8a8a611165565b50505050505050505050565b6001600160a01b03918216600090815260cb6020908152604080832093909416825291909152205490565b61106d6118e9565b6001600160a01b038216600081815260c96020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6110d46118e9565b6001600160a01b0381166111395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106da565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561082381611943565b6001600160a01b0383166111c75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106da565b6001600160a01b0382166112285760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106da565b6001600160a01b03838116600081815260cb602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610168544361129b91906126c1565b9050806000036112ad57600091505090565b600061016354826112be919061263d565b9050600061016354836112d191906126ed565b90506000806112de610d0f565b905060005b8481101561132d576101635460026112fb83886126c1565b6113059190612651565b61130f9084612610565b6113199190612610565b6113239084612475565b92506001016112e3565b50821561134b5761133e8382612610565b6113489083612475565b91505b50949350505050565b6000611360848461103a565b905060001981146113c857818110156113bb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106da565b6113c88484848403611165565b50505050565b6001600160a01b0383166114325760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106da565b6001600160a01b0382166114945760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106da565b61149f838383611a34565b6001600160a01b038316600090815260ca6020526040902054818110156115175760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106da565b6001600160a01b03808516600081815260ca602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115779086815260200190565b60405180910390a36113c8565b60006107127f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6115b360fc5490565b60fd546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6108236118e9565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561163a57610ab083611aa6565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611694575060408051601f3d908101601f1916820190925261169191810190612701565b60015b6116f75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106da565b60008051602061285b83398151915281146117665760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106da565b50610ab0838383611b42565b600054610100900460ff166117995760405162461bcd60e51b81526004016106da90612660565b6106f78282611b67565b600054610100900460ff166117ca5760405162461bcd60e51b81526004016106da90612660565b61082381604051806040016040528060018152602001603160f81b815250611ba7565b6001600160a01b0382166118435760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106da565b61184f60008383611a34565b8060cc60008282546118619190612475565b90915550506001600160a01b038216600081815260ca60209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff166118e15760405162461bcd60e51b81526004016106da90612660565b610c7d611be8565b6097546001600160a01b03163314610c7d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106da565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381166000908152610130602052604090208054600181018255905b50919050565b60006106686119cb611584565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611a1d87878787611c18565b91509150611a2a81611cdc565b5095945050505050565b610169600081548110611a4957611a496126ab565b6000918252602090912001546001600160a01b0384811691161480611a995750610169600081548110611a7e57611a7e6126ab565b6000918252602090912001546001600160a01b038381169116145b15610ab057610ab0610d87565b6001600160a01b0381163b611b135760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106da565b60008051602061285b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611b4b83611e26565b600082511180611b585750805b15610ab0576113c88383611e66565b600054610100900460ff16611b8e5760405162461bcd60e51b81526004016106da90612660565b60cd611b9a8382612768565b5060ce610ab08282612768565b600054610100900460ff16611bce5760405162461bcd60e51b81526004016106da90612660565b81516020928301208151919092012060fc9190915560fd55565b600054610100900460ff16611c0f5760405162461bcd60e51b81526004016106da90612660565b610c7d33611943565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611c4f5750600090506003611cd3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ca3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ccc57600060019250925050611cd3565b9150600090505b94509492505050565b6000816004811115611cf057611cf0612828565b03611cf85750565b6001816004811115611d0c57611d0c612828565b03611d595760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106da565b6002816004811115611d6d57611d6d612828565b03611dba5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106da565b6003816004811115611dce57611dce612828565b036108235760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106da565b611e2f81611aa6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611ece5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106da565b600080846001600160a01b031684604051611ee9919061283e565b600060405180830381855af49150503d8060008114611f24576040519150601f19603f3d011682016040523d82523d6000602084013e611f29565b606091505b5091509150611f51828260405180606001604052806027815260200161287b60279139611f5a565b95945050505050565b60608315611f69575081610736565b6107368383815115611f7e5781518083602001fd5b8060405162461bcd60e51b81526004016106da9190612036565b828054828255906000526020600020908101928215611fed579160200282015b82811115611fed57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611fb8565b50611ff9929150611ffd565b5090565b5b80821115611ff95760008155600101611ffe565b60005b8381101561202d578181015183820152602001612015565b50506000910152565b6020815260008251806020840152612055816040850160208701612012565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461208057600080fd5b919050565b6000806040838503121561209857600080fd5b6120a183612069565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156120ee576120ee6120af565b604052919050565b600082601f83011261210757600080fd5b8135602067ffffffffffffffff821115612123576121236120af565b8160051b6121328282016120c5565b928352848101820192828101908785111561214c57600080fd5b83870192505b848310156121725761216383612069565b82529183019190830190612152565b979650505050505050565b60006020828403121561218f57600080fd5b813567ffffffffffffffff8111156121a657600080fd5b6121b2848285016120f6565b949350505050565b6000806000606084860312156121cf57600080fd5b6121d884612069565b92506121e660208501612069565b9150604084013590509250925092565b60006020828403121561220857600080fd5b61073682612069565b6000806040838503121561222457600080fd5b823567ffffffffffffffff81111561223b57600080fd5b612247858286016120f6565b92505061225660208401612069565b90509250929050565b6000806040838503121561227257600080fd5b61227b83612069565b915060208084013567ffffffffffffffff8082111561229957600080fd5b818601915086601f8301126122ad57600080fd5b8135818111156122bf576122bf6120af565b6122d1601f8201601f191685016120c5565b915080825287848285010111156122e757600080fd5b80848401858401376000848284010152508093505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156123465783516001600160a01b031683529284019291840191600101612321565b50909695505050505050565b600080600080600080600060e0888a03121561236d57600080fd5b61237688612069565b965061238460208901612069565b95506040880135945060608801359350608088013560ff811681146123a857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156123d857600080fd5b6123e183612069565b915061225660208401612069565b6000806040838503121561240257600080fd5b61240b83612069565b91506020830135801515811461242057600080fd5b809150509250929050565b600181811c9082168061243f57607f821691505b6020821081036119b857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106685761066861245f565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181815b8085111561255b5781600019048211156125415761254161245f565b8085161561254e57918102915b93841c9390800290612525565b509250929050565b60008261257257506001610668565b8161257f57506000610668565b8160018114612595576002811461259f576125bb565b6001915050610668565b60ff8411156125b0576125b061245f565b50506001821b610668565b5060208310610133831016604e8410600b84101617156125de575081810a610668565b6125e88383612520565b80600019048211156125fc576125fc61245f565b029392505050565b60006107368383612563565b80820281158282048414176106685761066861245f565b634e487b7160e01b600052601260045260246000fd5b60008261264c5761264c612627565b500490565b600061073660ff841683612563565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b818103818111156106685761066861245f565b6000600182016126e6576126e661245f565b5060010190565b6000826126fc576126fc612627565b500690565b60006020828403121561271357600080fd5b5051919050565b601f821115610ab057600081815260208120601f850160051c810160208610156127415750805b601f850160051c820191505b818110156127605782815560010161274d565b505050505050565b815167ffffffffffffffff811115612782576127826120af565b61279681612790845461242b565b8461271a565b602080601f8311600181146127cb57600084156127b35750858301515b600019600386901b1c1916600185901b178555612760565b600085815260208120601f198616915b828110156127fa578886015182559484019460019091019084016127db565b50858210156128185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b60008251612850818460208701612012565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f557260fdccc71f6237adf6bf337b50a15527ad5796b67e170175cd3fb36282464736f6c63430008120033";

type ProxiedSensorTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxiedSensorTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxiedSensorToken__factory extends ContractFactory {
  constructor(...args: ProxiedSensorTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxiedSensorToken> {
    return super.deploy(overrides || {}) as Promise<ProxiedSensorToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxiedSensorToken {
    return super.attach(address) as ProxiedSensorToken;
  }
  override connect(signer: Signer): ProxiedSensorToken__factory {
    return super.connect(signer) as ProxiedSensorToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxiedSensorTokenInterface {
    return new utils.Interface(_abi) as ProxiedSensorTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxiedSensorToken {
    return new Contract(address, _abi, signerOrProvider) as ProxiedSensorToken;
  }
}
