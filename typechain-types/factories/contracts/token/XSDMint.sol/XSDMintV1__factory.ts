/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XSDMintV1,
  XSDMintV1Interface,
} from "../../../../contracts/token/XSDMint.sol/XSDMintV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "XSDMint__AtLeastOne",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__IllegalAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__NFTNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__NFTNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__TokenExhausted",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__TokenOverAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__Unbalance",
    type: "error",
  },
  {
    inputs: [],
    name: "XSDMint__XSDNotEnough",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract ERC721",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token_id",
            type: "uint256",
          },
        ],
        internalType: "struct XSDMintV1.NftTokens[]",
        name: "nftTokens",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract ERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct XSDMintV1.Erc20Tokens[]",
        name: "erc20Tokens",
        type: "tuple[]",
      },
    ],
    name: "XSDBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract ERC721",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token_id",
            type: "uint256",
          },
        ],
        internalType: "struct XSDMintV1.NftTokens[]",
        name: "nftTokens",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract ERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct XSDMintV1.Erc20Tokens[]",
        name: "erc20Tokens",
        type: "tuple[]",
      },
    ],
    name: "XSDMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenv",
        type: "uint256",
      },
    ],
    name: "checkRatio",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "initNFTPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "initTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721[]",
        name: "nftAddr",
        type: "address[]",
      },
      {
        internalType: "contract ERC20[]",
        name: "erc20Addr",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "addOrRemove",
        type: "bool",
      },
    ],
    name: "modifyCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_rate",
        type: "uint256[2]",
      },
    ],
    name: "modifyRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mxcxsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
    ],
    name: "s_aceeptNft",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    name: "s_aceeptToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_nftPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    name: "s_tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x3060805260e0604052600860a0908152600260c0819052620000249160ca9162000172565b50600260d0553480156200003757600080fd5b50600054610100900460ff1615808015620000595750600054600160ff909116105b8062000089575062000076306200016360201b620015e61760201c565b15801562000089575060005460ff166001145b620000f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000115576000805461ff0019166101001790555b80156200015c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001d1565b6001600160a01b03163b151590565b8260028101928215620001a8579160200282015b82811115620001a8578251829060ff1690559160200191906001019062000186565b50620001b6929150620001ba565b5090565b5b80821115620001b65760008155600101620001bb565b60805161288062000209600039600081816106f10152818161073a015281816107fb0152818161083b01526108ce01526128806000f3fe6080604052600436106101cd5760003560e01c806383cb0894116100f7578063b23c065e11610095578063ded1e43811610064578063ded1e43814610585578063e4820f48146105a5578063e7ee6ad6146105d5578063fea80849146105f557600080fd5b8063b23c065e14610505578063c4d66de814610525578063c66392f614610545578063dd62ed3e1461056557600080fd5b806395d89b41116100d157806395d89b4114610490578063a457c2d7146104a5578063a9059cbb146104c5578063af0fbdef146104e557600080fd5b806383cb08941461040b5780638da5cb5b1461042b57806390260d061461046357600080fd5b80633659cfe61161016f57806352d1902d1161013e57806352d1902d1461038a578063552543851461039f5780636c41faf6146103b557806370a08231146103d557600080fd5b80633659cfe6146102fd578063395093511461031f57806345ee4aa31461033f5780634f1ef2861461037757600080fd5b806318160ddd116101ab57806318160ddd1461027257806323b872dd14610291578063313ce567146102b1578063358ed6d5146102cd57600080fd5b806306fdde03146101d2578063095ea7b3146101fd578063150b7a021461022d575b600080fd5b3480156101de57600080fd5b506101e7610615565b6040516101f49190612011565b60405180910390f35b34801561020957600080fd5b5061021d610218366004612059565b6106a7565b60405190151581526020016101f4565b34801561023957600080fd5b50610259610248366004612085565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101f4565b34801561027e57600080fd5b506035545b6040519081526020016101f4565b34801561029d57600080fd5b5061021d6102ac366004612124565b6106c1565b3480156102bd57600080fd5b50604051601281526020016101f4565b3480156102d957600080fd5b5061021d6102e8366004612165565b60cc6020526000908152604090205460ff1681565b34801561030957600080fd5b5061031d610318366004612165565b6106e7565b005b34801561032b57600080fd5b5061021d61033a366004612059565b6107cf565b34801561034b57600080fd5b5061028361035a366004612059565b60ce60209081526000928352604080842090915290825290205481565b61031d610385366004612198565b6107f1565b34801561039657600080fd5b506102836108c1565b3480156103ab57600080fd5b5061028360d05481565b3480156103c157600080fd5b5061031d6103d036600461225c565b610974565b3480156103e157600080fd5b506102836103f0366004612165565b6001600160a01b031660009081526033602052604090205490565b34801561041757600080fd5b5061031d6104263660046122eb565b6109c4565b34801561043757600080fd5b5060c95461044b906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b34801561046f57600080fd5b5061028361047e366004612165565b60cf6020526000908152604090205481565b34801561049c57600080fd5b506101e7610ac9565b3480156104b157600080fd5b5061021d6104c0366004612059565b610ad8565b3480156104d157600080fd5b5061021d6104e0366004612059565b610b5e565b3480156104f157600080fd5b5061031d610500366004612059565b610b6c565b34801561051157600080fd5b5061031d6105203660046123b4565b610bb2565b34801561053157600080fd5b5061031d610540366004612165565b610fb7565b34801561055157600080fd5b5061031d610560366004612420565b611123565b34801561057157600080fd5b50610283610580366004612448565b61115a565b34801561059157600080fd5b5061021d6105a0366004612481565b611185565b3480156105b157600080fd5b5061021d6105c0366004612165565b60cd6020526000908152604090205460ff1681565b3480156105e157600080fd5b506102836105f03660046124a3565b6111ff565b34801561060157600080fd5b5061031d6106103660046123b4565b611216565b606060368054610624906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610650906124bc565b801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b6000336106b58185856115f5565b60019150505b92915050565b6000336106cf858285611719565b6106da858585611793565b60019150505b9392505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107385760405162461bcd60e51b815260040161072f906124f0565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610781600080516020612804833981519152546001600160a01b031690565b6001600160a01b0316146107a75760405162461bcd60e51b815260040161072f9061253c565b6107b08161193e565b604080516000808252602082019092526107cc91839190611968565b50565b6000336106b58185856107e2838361115a565b6107ec919061259e565b6115f5565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036108395760405162461bcd60e51b815260040161072f906124f0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610882600080516020612804833981519152546001600160a01b031690565b6001600160a01b0316146108a85760405162461bcd60e51b815260040161072f9061253c565b6108b18261193e565b6108bd82826001611968565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109615760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161072f565b5060008051602061280483398151915290565b60c9546001600160a01b0316331461099e5760405162461bcd60e51b815260040161072f906125b1565b6001600160a01b03909216600090815260ce602090815260408083209383529290522055565b60c9546001600160a01b031633146109ee5760405162461bcd60e51b815260040161072f906125b1565b838260005b82811015610a57578360cc60008a8a85818110610a1257610a126125d9565b9050602002016020810190610a279190612165565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016109f3565b5060005b81811015610abf578360cd6000888885818110610a7a57610a7a6125d9565b9050602002016020810190610a8f9190612165565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610a5b565b5050505050505050565b606060378054610624906124bc565b60003381610ae6828661115a565b905083811015610b465760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161072f565b610b5382868684036115f5565b506001949350505050565b6000336106b5818585611793565b60c9546001600160a01b03163314610b965760405162461bcd60e51b815260040161072f906125b1565b6001600160a01b03909116600090815260cf6020526040902055565b821580610bbd575080155b15610bdb57604051639c4fad6760e01b815260040160405180910390fd5b8281600080805b84811015610d7a576000898983818110610bfe57610bfe6125d9565b610c149260206040909202019081019150612165565b905060008a8a84818110610c2a57610c2a6125d9565b905060400201602001359050306001600160a01b0316826001600160a01b0316636352211e836040518263ffffffff1660e01b8152600401610c6e91815260200190565b602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906125ef565b6001600160a01b031614610cd657604051633b676f4360e21b815260040160405180910390fd5b6001600160a01b038216600090815260ce60209081526040808320848452909152902054610d04908661259e565b604051632142170760e11b8152306004820152336024820152604481018390529095506001600160a01b038316906342842e0e90606401600060405180830381600087803b158015610d5557600080fd5b505af1158015610d69573d6000803e3d6000fd5b505050508260010192505050610be2565b5060005b83811015610f0d576000878783818110610d9a57610d9a6125d9565b610db09260206040909202019081019150612165565b90506000888884818110610dc657610dc66125d9565b604080516370a0823160e01b815230600482015291029290920160200135925082916001600160a01b03851691506370a0823190602401602060405180830381865afa158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e919061260c565b1115610e5d57604051632f622fdb60e11b815260040160405180910390fd5b6001600160a01b038216600090815260cf6020526040902054610e81908290612625565b610e8b908561259e565b60405163a9059cbb60e01b8152336004820152602481018390529094506001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff919061263c565b508260010192505050610d7e565b50610f188282611185565b610f3557604051635b5a090560e11b815260040160405180910390fd5b60d054600090610f45838561259e565b610f4f9190612659565b905060008111610f725760405163a397196b60e01b815260040160405180910390fd5b33600090815260336020526040902054811115610fa257604051637c580d3d60e11b815260040160405180910390fd5b610fac3382611ad8565b505050505050505050565b600054610100900460ff1615808015610fd75750600054600160ff909116105b80610ff15750303b158015610ff1575060005460ff166001145b6110545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161072f565b6000805460ff191660011790558015611077576000805461ff0019166101001790555b6110b7604051806040016040528060038152602001621614d160ea1b815250604051806040016040528060038152602001621614d160ea1b815250611c0c565b6110bf611c3d565b60c980546001600160a01b0319166001600160a01b03841617905580156108bd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60c9546001600160a01b0316331461114d5760405162461bcd60e51b815260040161072f906125b1565b6108bd60ca826002611f9a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60008060ca600101546111989085612625565b9050600060ca8101546111ab9085612625565b905060008183116111bc57816111be565b825b905060008284116111cf57836111d1565b825b905060026111df828461267b565b10156111f25760019450505050506106bb565b60009450505050506106bb565b60ca816002811061120f57600080fd5b0154905081565b821580611221575080155b1561123f57604051639c4fad6760e01b815260040160405180910390fd5b8281600080805b848110156113de576000898983818110611262576112626125d9565b6112789260206040909202019081019150612165565b905060008a8a8481811061128e5761128e6125d9565b905060400201602001359050336001600160a01b0316826001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016112d291815260200190565b602060405180830381865afa1580156112ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131391906125ef565b6001600160a01b03161461133a576040516316f625c160e31b815260040160405180910390fd5b6001600160a01b038216600090815260ce60209081526040808320848452909152902054611368908661259e565b604051632142170760e11b8152336004820152306024820152604481018390529095506001600160a01b038316906342842e0e90606401600060405180830381600087803b1580156113b957600080fd5b505af11580156113cd573d6000803e3d6000fd5b505050508260010192505050611246565b5060005b838110156115775760008787838181106113fe576113fe6125d9565b6114149260206040909202019081019150612165565b9050600088888481811061142a5761142a6125d9565b604080516370a0823160e01b815233600482015291029290920160200135925082916001600160a01b03851691506370a0823190602401602060405180830381865afa15801561147e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a2919061260c565b11156114c15760405163a71249bd60e01b815260040160405180910390fd5b6001600160a01b038216600090815260cf60205260409020546114e5908290612625565b6114ef908561259e565b6040516323b872dd60e01b8152336004820152306024820152604481018390529094506001600160a01b038316906323b872dd906064016020604051808303816000875af1158015611545573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611569919061263c565b5082600101925050506113e2565b506115828282611185565b61159f57604051635b5a090560e11b815260040160405180910390fd5b60d0546000906115af838561259e565b6115b99190612659565b9050600081116115dc5760405163a397196b60e01b815260040160405180910390fd5b610fac3382611c66565b6001600160a01b03163b151590565b6001600160a01b0383166116575760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161072f565b6001600160a01b0382166116b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161072f565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611725848461115a565b9050600019811461178d57818110156117805760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161072f565b61178d84848484036115f5565b50505050565b6001600160a01b0383166117f75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161072f565b6001600160a01b0382166118595760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161072f565b6001600160a01b038316600090815260336020526040902054818110156118d15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161072f565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906119319086815260200190565b60405180910390a361178d565b60c9546001600160a01b031633146107cc5760405162461bcd60e51b815260040161072f906125b1565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156119a05761199b83611d27565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119fa575060408051601f3d908101601f191682019092526119f79181019061260c565b60015b611a5d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161072f565b6000805160206128048339815191528114611acc5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161072f565b5061199b838383611dc3565b6001600160a01b038216611b385760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161072f565b6001600160a01b03821660009081526033602052604090205481811015611bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161072f565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16611c335760405162461bcd60e51b815260040161072f9061268e565b6108bd8282611de8565b600054610100900460ff16611c645760405162461bcd60e51b815260040161072f9061268e565b565b6001600160a01b038216611cbc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161072f565b8060356000828254611cce919061259e565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0381163b611d945760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161072f565b60008051602061280483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611dcc83611e28565b600082511180611dd95750805b1561199b5761178d8383611e68565b600054610100900460ff16611e0f5760405162461bcd60e51b815260040161072f9061268e565b6036611e1b8382612727565b50603761199b8282612727565b611e3181611d27565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611ed05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161072f565b600080846001600160a01b031684604051611eeb91906127e7565b600060405180830381855af49150503d8060008114611f26576040519150601f19603f3d011682016040523d82523d6000602084013e611f2b565b606091505b5091509150611f53828260405180606001604052806027815260200161282460279139611f5c565b95945050505050565b60608315611f6b5750816106e0565b6106e08383815115611f805781518083602001fd5b8060405162461bcd60e51b815260040161072f9190612011565b8260028101928215611fc8579160200282015b82811115611fc8578235825591602001919060010190611fad565b50611fd4929150611fd8565b5090565b5b80821115611fd45760008155600101611fd9565b60005b83811015612008578181015183820152602001611ff0565b50506000910152565b6020815260008251806020840152612030816040850160208701611fed565b601f01601f19169190910160400192915050565b6001600160a01b03811681146107cc57600080fd5b6000806040838503121561206c57600080fd5b823561207781612044565b946020939093013593505050565b60008060008060006080868803121561209d57600080fd5b85356120a881612044565b945060208601356120b881612044565b935060408601359250606086013567ffffffffffffffff808211156120dc57600080fd5b818801915088601f8301126120f057600080fd5b8135818111156120ff57600080fd5b89602082850101111561211157600080fd5b9699959850939650602001949392505050565b60008060006060848603121561213957600080fd5b833561214481612044565b9250602084013561215481612044565b929592945050506040919091013590565b60006020828403121561217757600080fd5b81356106e081612044565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156121ab57600080fd5b82356121b681612044565b9150602083013567ffffffffffffffff808211156121d357600080fd5b818501915085601f8301126121e757600080fd5b8135818111156121f9576121f9612182565b604051601f8201601f19908116603f0116810190838211818310171561222157612221612182565b8160405282815288602084870101111561223a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060006060848603121561227157600080fd5b833561227c81612044565b95602085013595506040909401359392505050565b60008083601f8401126122a357600080fd5b50813567ffffffffffffffff8111156122bb57600080fd5b6020830191508360208260051b85010111156122d657600080fd5b9250929050565b80151581146107cc57600080fd5b60008060008060006060868803121561230357600080fd5b853567ffffffffffffffff8082111561231b57600080fd5b61232789838a01612291565b9097509550602088013591508082111561234057600080fd5b5061234d88828901612291565b9094509250506040860135612361816122dd565b809150509295509295909350565b60008083601f84011261238157600080fd5b50813567ffffffffffffffff81111561239957600080fd5b6020830191508360208260061b85010111156122d657600080fd5b600080600080604085870312156123ca57600080fd5b843567ffffffffffffffff808211156123e257600080fd5b6123ee8883890161236f565b9096509450602087013591508082111561240757600080fd5b506124148782880161236f565b95989497509550505050565b60006040828403121561243257600080fd5b8260408301111561244257600080fd5b50919050565b6000806040838503121561245b57600080fd5b823561246681612044565b9150602083013561247681612044565b809150509250929050565b6000806040838503121561249457600080fd5b50508035926020909101359150565b6000602082840312156124b557600080fd5b5035919050565b600181811c908216806124d057607f821691505b60208210810361244257634e487b7160e01b600052602260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808201808211156106bb576106bb612588565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561260157600080fd5b81516106e081612044565b60006020828403121561261e57600080fd5b5051919050565b80820281158282048414176106bb576106bb612588565b60006020828403121561264e57600080fd5b81516106e0816122dd565b60008261267657634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106bb576106bb612588565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561199b57600081815260208120601f850160051c810160208610156127005750805b601f850160051c820191505b8181101561271f5782815560010161270c565b505050505050565b815167ffffffffffffffff81111561274157612741612182565b6127558161274f84546124bc565b846126d9565b602080601f83116001811461278a57600084156127725750858301515b600019600386901b1c1916600185901b17855561271f565b600085815260208120601f198616915b828110156127b95788860151825594840194600190910190840161279a565b50858210156127d75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516127f9818460208701611fed565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cef0ba32f967aca1fe7ea8bc0052ec47c1deddd702e359659a9e8b8e04b47a9a64736f6c63430008120033";

type XSDMintV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XSDMintV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XSDMintV1__factory extends ContractFactory {
  constructor(...args: XSDMintV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XSDMintV1> {
    return super.deploy(overrides || {}) as Promise<XSDMintV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XSDMintV1 {
    return super.attach(address) as XSDMintV1;
  }
  override connect(signer: Signer): XSDMintV1__factory {
    return super.connect(signer) as XSDMintV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XSDMintV1Interface {
    return new utils.Interface(_abi) as XSDMintV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XSDMintV1 {
    return new Contract(address, _abi, signerOrProvider) as XSDMintV1;
  }
}
