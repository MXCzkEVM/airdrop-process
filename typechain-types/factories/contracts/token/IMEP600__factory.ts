/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMEP600,
  IMEP600Interface,
} from "../../../contracts/token/IMEP600";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tag",
        type: "bytes32",
      },
    ],
    name: "NFCNFTProvisioned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_nfcTag",
        type: "bytes32",
      },
    ],
    name: "mintNFCNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMEP600__factory {
  static readonly abi = _abi;
  static createInterface(): IMEP600Interface {
    return new utils.Interface(_abi) as IMEP600Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMEP600 {
    return new Contract(address, _abi, signerOrProvider) as IMEP600;
  }
}
