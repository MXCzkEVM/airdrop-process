/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ProxiedMEP1002NamingTokenMock,
  ProxiedMEP1002NamingTokenMockInterface,
} from "../../../../../contracts/token/mocks/MEP1002NamingTokenMock.sol/ProxiedMEP1002NamingTokenMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "additionalFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161292a61004c600039600081816108270152818161086701528181610a7a01528181610aba0152610bde015261292a6000f3fe6080604052600436106101c25760003560e01c806352d1902d116100f757806395d89b4111610095578063da8c229e11610064578063da8c229e146104f7578063e0dba60f14610527578063e985e9c514610547578063f2fde38b1461059157600080fd5b806395d89b4114610482578063a22cb46514610497578063b88d4fde146104b7578063c87b56dd146104d757600080fd5b80636352211e116100d15780636352211e1461040f57806370a082311461042f578063715018a61461044f5780638da5cb5b1461046457600080fd5b806352d1902d146103c557806355f804b3146103da5780635d79343d146103fa57600080fd5b80632f745c591161016457806342842e0e1161013e57806342842e0e146103525780634cd88b76146103725780634f1ef286146103925780634f6ccce7146103a557600080fd5b80632f745c59146102f25780633659cfe61461031257806340c10f191461033257600080fd5b8063095ea7b3116101a0578063095ea7b31461027b57806318160ddd1461029d57806323b872dd146102bd5780632d502a43146102dd57600080fd5b806301ffc9a7146101c757806306fdde03146101fc578063081812fc14610243575b600080fd5b3480156101d357600080fd5b506101e76101e23660046120be565b6105b1565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b5060408051808201909152601581527426a2a8189818192730b6b4b733aa37b5b2b7102b1960591b60208201525b6040516101f3919061212b565b34801561024f57600080fd5b5061026361025e36600461213e565b6105dc565b6040516001600160a01b0390911681526020016101f3565b34801561028757600080fd5b5061029b610296366004612173565b610604565b005b3480156102a957600080fd5b50610130545b6040519081526020016101f3565b3480156102c957600080fd5b5061029b6102d836600461219d565b61071e565b3480156102e957600080fd5b506102af61074f565b3480156102fe57600080fd5b506102af61030d366004612173565b610786565b34801561031e57600080fd5b5061029b61032d3660046121d9565b61081d565b34801561033e57600080fd5b5061029b61034d366004612173565b6108fc565b34801561035e57600080fd5b5061029b61036d36600461219d565b610939565b34801561037e57600080fd5b5061029b61038d366004612297565b610954565b61029b6103a03660046122fb565b610a70565b3480156103b157600080fd5b506102af6103c036600461213e565b610b3c565b3480156103d157600080fd5b506102af610bd1565b3480156103e657600080fd5b5061029b6103f536600461233f565b610c84565b34801561040657600080fd5b5061029b610cc0565b34801561041b57600080fd5b5061026361042a36600461213e565b610d0b565b34801561043b57600080fd5b506102af61044a3660046121d9565b610d6b565b34801561045b57600080fd5b5061029b610df1565b34801561047057600080fd5b506097546001600160a01b0316610263565b34801561048e57600080fd5b50610236610e03565b3480156104a357600080fd5b5061029b6104b2366004612374565b610e95565b3480156104c357600080fd5b5061029b6104d23660046123b0565b610ea0565b3480156104e357600080fd5b506102366104f236600461213e565b610ed8565b34801561050357600080fd5b506101e76105123660046121d9565b60c96020526000908152604090205460ff1681565b34801561053357600080fd5b5061029b610542366004612374565b610f3f565b34801561055357600080fd5b506101e7610562366004612418565b6001600160a01b0391821660009081526101016020908152604080832093909416825291909152205460ff1690565b34801561059d57600080fd5b5061029b6105ac3660046121d9565b610fa6565b60006001600160e01b0319821663780e9d6360e01b14806105d657506105d68261103f565b92915050565b60006105e78261108f565b50600090815261010060205260409020546001600160a01b031690565b600061060f82610d0b565b9050806001600160a01b0316836001600160a01b0316036106815760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061069d575061069d8133610562565b61070f5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610678565b61071983836110ee565b505050565b610728338261115d565b6107445760405162461bcd60e51b81526004016106789061244b565b6107198383836111dd565b33600090815260c9602052604081205460ff1661077e5760405162461bcd60e51b815260040161067890612498565b506101305490565b600061079183610d6b565b82106107f35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610678565b506001600160a01b0391909116600090815261012e60209081526040808320938352929052205490565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036108655760405162461bcd60e51b8152600401610678906124e0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108ae6000805160206128ae833981519152546001600160a01b031690565b6001600160a01b0316146108d45760405162461bcd60e51b81526004016106789061252c565b6108dd8161134f565b604080516000808252602082019092526108f991839190611357565b50565b33600090815260c9602052604090205460ff1661092b5760405162461bcd60e51b815260040161067890612498565b61093582826114c2565b5050565b61071983838360405180602001604052806000815250610ea0565b600054610100900460ff16158080156109745750600054600160ff909116105b8061098e5750303b15801561098e575060005460ff166001145b6109f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610678565b6000805460ff191660011790558015610a14576000805461ff0019166101001790555b610a1c610cc0565b610a2683836114dc565b8015610719576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ab85760405162461bcd60e51b8152600401610678906124e0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b016000805160206128ae833981519152546001600160a01b031690565b6001600160a01b031614610b275760405162461bcd60e51b81526004016106789061252c565b610b308261134f565b61093582826001611357565b6000610b486101305490565b8210610bab5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610678565b6101308281548110610bbf57610bbf612578565b90600052602060002001549050919050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c715760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610678565b506000805160206128ae83398151915290565b33600090815260c9602052604090205460ff16610cb35760405162461bcd60e51b815260040161067890612498565b6101606109358282612616565b600054610100900460ff16610ce75760405162461bcd60e51b8152600401610678906126d6565b33600090815260c960205260409020805460ff19166001179055610d0961150d565b565b600081815260fe60205260408120546001600160a01b0316806105d65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610678565b60006001600160a01b038216610dd55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610678565b506001600160a01b0316600090815260ff602052604090205490565b610df961153c565b610d096000611596565b606060fd8054610e129061258e565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3e9061258e565b8015610e8b5780601f10610e6057610100808354040283529160200191610e8b565b820191906000526020600020905b815481529060010190602001808311610e6e57829003601f168201915b5050505050905090565b6109353383836115e8565b610eaa338361115d565b610ec65760405162461bcd60e51b81526004016106789061244b565b610ed2848484846116b7565b50505050565b6060610ee38261108f565b6000610eed6116ea565b90506000815111610f0d5760405180602001604052806000815250610f38565b80610f17846116fa565b604051602001610f28929190612721565b6040516020818303038152906040525b9392505050565b610f4761153c565b6001600160a01b038216600081815260c96020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b610fae61153c565b6001600160a01b0381166110135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610678565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103556108f981611596565b60006001600160e01b031982166380ac58cd60e01b148061107057506001600160e01b03198216635b5e139f60e01b145b806105d657506301ffc9a760e01b6001600160e01b03198316146105d6565b600081815260fe60205260409020546001600160a01b03166108f95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610678565b60008181526101006020526040902080546001600160a01b0319166001600160a01b038416908117909155819061112482610d0b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061116983610d0b565b9050806001600160a01b0316846001600160a01b031614806111b157506001600160a01b038082166000908152610101602090815260408083209388168352929052205460ff165b806111d55750836001600160a01b03166111ca846105dc565b6001600160a01b0316145b949350505050565b826001600160a01b03166111f082610d0b565b6001600160a01b0316146112165760405162461bcd60e51b815260040161067890612750565b6001600160a01b0382166112785760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610678565b611285838383600161178d565b826001600160a01b031661129882610d0b565b6001600160a01b0316146112be5760405162461bcd60e51b815260040161067890612750565b60008181526101006020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260ff855283862080546000190190559087168086528386208054600101905586865260fe90945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108f961153c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561138a57610719836118c3565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156113e4575060408051601f3d908101601f191682019092526113e191810190612795565b60015b6114475760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610678565b6000805160206128ae83398151915281146114b65760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610678565b5061071983838361195f565b610935828260405180602001604052806000815250611984565b600054610100900460ff166115035760405162461bcd60e51b8152600401610678906126d6565b61093582826119b7565b600054610100900460ff166115345760405162461bcd60e51b8152600401610678906126d6565b610d096119f7565b6097546001600160a01b03163314610d095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610678565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036116495760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610678565b6001600160a01b0383811660008181526101016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116c28484846111dd565b6116ce84848484611a27565b610ed25760405162461bcd60e51b8152600401610678906127ae565b60606101608054610e129061258e565b6060600061170783611b28565b600101905060008167ffffffffffffffff811115611727576117276121f4565b6040519080825280601f01601f191660200182016040528015611751576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461175b57509392505050565b60018111156117fc5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610678565b816001600160a01b03851661185a57611855816101308054600083815261013160205260408120829055600182018355919091527f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf340155565b61187d565b836001600160a01b0316856001600160a01b03161461187d5761187d8582611c00565b6001600160a01b0384166118995761189481611ca2565b6118bc565b846001600160a01b0316846001600160a01b0316146118bc576118bc8482611d57565b5050505050565b6001600160a01b0381163b6119305760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610678565b6000805160206128ae83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61196883611d9d565b6000825111806119755750805b1561071957610ed28383611ddd565b61198e8383611ed1565b61199b6000848484611a27565b6107195760405162461bcd60e51b8152600401610678906127ae565b600054610100900460ff166119de5760405162461bcd60e51b8152600401610678906126d6565b60fc6119ea8382612616565b5060fd6107198282612616565b600054610100900460ff16611a1e5760405162461bcd60e51b8152600401610678906126d6565b610d0933611596565b60006001600160a01b0384163b15611b1d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a6b903390899088908890600401612800565b6020604051808303816000875af1925050508015611aa6575060408051601f3d908101601f19168201909252611aa39181019061283d565b60015b611b03573d808015611ad4576040519150601f19603f3d011682016040523d82523d6000602084013e611ad9565b606091505b508051600003611afb5760405162461bcd60e51b8152600401610678906127ae565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111d5565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611b675772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611b93576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611bb157662386f26fc10000830492506010015b6305f5e1008310611bc9576305f5e100830492506008015b6127108310611bdd57612710830492506004015b60648310611bef576064830492506002015b600a83106105d65760010192915050565b60006001611c0d84610d6b565b611c17919061285a565b600083815261012f6020526040902054909150808214611c6d576001600160a01b038416600090815261012e60209081526040808320858452825280832054848452818420819055835261012f90915290208190555b50600091825261012f602090815260408084208490556001600160a01b03909416835261012e81528383209183525290812055565b61013054600090611cb59060019061285a565b600083815261013160205260408120546101308054939450909284908110611cdf57611cdf612578565b90600052602060002001549050806101308381548110611d0157611d01612578565b60009182526020808320909101929092558281526101319091526040808220849055858252812055610130805480611d3b57611d3b61287b565b6001900381819060005260206000200160009055905550505050565b6000611d6283610d6b565b6001600160a01b03909316600090815261012e60209081526040808320868452825280832085905593825261012f9052919091209190915550565b611da6816118c3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611e455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610678565b600080846001600160a01b031684604051611e609190612891565b600060405180830381855af49150503d8060008114611e9b576040519150601f19603f3d011682016040523d82523d6000602084013e611ea0565b606091505b5091509150611ec882826040518060600160405280602781526020016128ce6027913961206a565b95945050505050565b6001600160a01b038216611f275760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610678565b600081815260fe60205260409020546001600160a01b031615611f8c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610678565b611f9a60008383600161178d565b600081815260fe60205260409020546001600160a01b031615611fff5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610678565b6001600160a01b038216600081815260ff602090815260408083208054600101905584835260fe90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608315612079575081610f38565b610f38838381511561208e5781518083602001fd5b8060405162461bcd60e51b8152600401610678919061212b565b6001600160e01b0319811681146108f957600080fd5b6000602082840312156120d057600080fd5b8135610f38816120a8565b60005b838110156120f65781810151838201526020016120de565b50506000910152565b600081518084526121178160208601602086016120db565b601f01601f19169290920160200192915050565b602081526000610f3860208301846120ff565b60006020828403121561215057600080fd5b5035919050565b80356001600160a01b038116811461216e57600080fd5b919050565b6000806040838503121561218657600080fd5b61218f83612157565b946020939093013593505050565b6000806000606084860312156121b257600080fd5b6121bb84612157565b92506121c960208501612157565b9150604084013590509250925092565b6000602082840312156121eb57600080fd5b610f3882612157565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261221b57600080fd5b813567ffffffffffffffff80821115612236576122366121f4565b604051601f8301601f19908116603f0116810190828211818310171561225e5761225e6121f4565b8160405283815286602085880101111561227757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156122aa57600080fd5b823567ffffffffffffffff808211156122c257600080fd5b6122ce8683870161220a565b935060208501359150808211156122e457600080fd5b506122f18582860161220a565b9150509250929050565b6000806040838503121561230e57600080fd5b61231783612157565b9150602083013567ffffffffffffffff81111561233357600080fd5b6122f18582860161220a565b60006020828403121561235157600080fd5b813567ffffffffffffffff81111561236857600080fd5b6111d58482850161220a565b6000806040838503121561238757600080fd5b61239083612157565b9150602083013580151581146123a557600080fd5b809150509250929050565b600080600080608085870312156123c657600080fd5b6123cf85612157565b93506123dd60208601612157565b925060408501359150606085013567ffffffffffffffff81111561240057600080fd5b61240c8782880161220a565b91505092959194509250565b6000806040838503121561242b57600080fd5b61243483612157565b915061244260208401612157565b90509250929050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526028908201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604082015267373a3937b63632b960c11b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806125a257607f821691505b6020821081036125c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561071957600081815260208120601f850160051c810160208610156125ef5750805b601f850160051c820191505b8181101561260e578281556001016125fb565b505050505050565b815167ffffffffffffffff811115612630576126306121f4565b6126448161263e845461258e565b846125c8565b602080601f83116001811461267957600084156126615750858301515b600019600386901b1c1916600185901b17855561260e565b600085815260208120601f198616915b828110156126a857888601518255948401946001909101908401612689565b50858210156126c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600083516127338184602088016120db565b8351908301906127478183602088016120db565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6000602082840312156127a757600080fd5b5051919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612833908301846120ff565b9695505050505050565b60006020828403121561284f57600080fd5b8151610f38816120a8565b818103818111156105d657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600082516128a38184602087016120db565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206ce0fdffe8f88ca03612955fb760720c10eaf7f1431fde7ca4c917a5f4a5a59a64736f6c63430008120033";

type ProxiedMEP1002NamingTokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxiedMEP1002NamingTokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxiedMEP1002NamingTokenMock__factory extends ContractFactory {
  constructor(...args: ProxiedMEP1002NamingTokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxiedMEP1002NamingTokenMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ProxiedMEP1002NamingTokenMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxiedMEP1002NamingTokenMock {
    return super.attach(address) as ProxiedMEP1002NamingTokenMock;
  }
  override connect(signer: Signer): ProxiedMEP1002NamingTokenMock__factory {
    return super.connect(signer) as ProxiedMEP1002NamingTokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxiedMEP1002NamingTokenMockInterface {
    return new utils.Interface(_abi) as ProxiedMEP1002NamingTokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxiedMEP1002NamingTokenMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProxiedMEP1002NamingTokenMock;
  }
}
