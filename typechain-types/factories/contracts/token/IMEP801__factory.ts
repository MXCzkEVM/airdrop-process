/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMEP801,
  IMEP801Interface,
} from "../../../contracts/token/IMEP801";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "applicationName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "businessOwnerAddress",
        type: "address",
      },
    ],
    name: "ISOApplicationDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMEP801__factory {
  static readonly abi = _abi;
  static createInterface(): IMEP801Interface {
    return new utils.Interface(_abi) as IMEP801Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMEP801 {
    return new Contract(address, _abi, signerOrProvider) as IMEP801;
  }
}
