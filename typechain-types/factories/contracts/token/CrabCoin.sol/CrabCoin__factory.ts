/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CrabCoin,
  CrabCoinInterface,
} from "../../../../contracts/token/CrabCoin.sol/CrabCoin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LPWANFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_defaultLPWANFee",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_LPWANFee",
        type: "uint256",
      },
    ],
    name: "setLPWANFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d2e806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de578063cd98163c11610097578063dd62ed3e11610071578063dd62ed3e14610354578063e0dba60f14610367578063e7cd4a041461037a578063f2fde38b1461038d57600080fd5b8063cd98163c1461030b578063d505accf1461031e578063da8c229e1461033157600080fd5b8063715018a6146102b15780637ecebe00146102b95780638da5cb5b146102cc57806395d89b41146102dd578063a457c2d7146102e5578063a9059cbb146102f857600080fd5b8063313ce5671161014b5780634772b753116101255780634772b7531461024b5780635d79343d1461025557806361d027b31461025d57806370a082311461028857600080fd5b8063313ce567146102215780633644e51514610230578063395093511461023857600080fd5b806306fdde0314610193578063095ea7b3146101b15780631794bb3c146101d457806318160ddd146101e95780632042e5c2146101fb57806323b872dd1461020e575b600080fd5b61019b6103a0565b6040516101a8919061175d565b60405180910390f35b6101c46101bf3660046117c7565b610432565b60405190151581526020016101a8565b6101e76101e23660046117f1565b61044c565b005b6068545b6040519081526020016101a8565b6101e761020936600461182d565b6106aa565b6101c461021c3660046117f1565b610808565b604051601281526020016101a8565b6101ed6108b3565b6101c46102463660046117c7565b6108c2565b6101ed6101005481565b6101e76108e4565b60ff54610270906001600160a01b031681565b6040516001600160a01b0390911681526020016101a8565b6101ed61029636600461182d565b6001600160a01b031660009081526066602052604090205490565b6101e761092f565b6101ed6102c736600461182d565b610941565b6033546001600160a01b0316610270565b61019b61095f565b6101c46102f33660046117c7565b61096e565b6101c46103063660046117c7565b6109e9565b6101e761031936600461184f565b610a76565b6101e761032c366004611868565b610aab565b6101c461033f36600461182d565b60656020526000908152604090205460ff1681565b6101ed6103623660046118db565b610c0f565b6101e761037536600461190e565b610c3a565b6101e761038836600461182d565b610ca1565b6101e761039b36600461182d565b610d38565b6060606980546103af9061194a565b80601f01602080910402602001604051908101604052809291908181526020018280546103db9061194a565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b600033610440818585610dd4565b60019150505b92915050565b600054610100900460ff161580801561046c5750600054600160ff909116105b806104865750303b158015610486575060005460ff166001145b6104ee5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610511576000805461ff0019166101001790555b6105196108e4565b6105606040518060400160405280600981526020016821b930b11021b7b4b760b91b8152506040518060400160405280600481526020016321a920a160e11b815250610ef8565b6105856040518060400160405280600481526020016321a920a160e11b815250610f29565b60ff80546001600160a01b0319166001600160a01b0386161790556101008290556105ca8360126105b790600a611a78565b6105c5906305f5e100611a87565b610f73565b6001600160a01b03838116600081815261010160205260408082208054600160ff199182168117909255610102805480840182557f93bdaa6a4190909b7c3fbe8d42169ffe1cab19f51dfc8db24c71abf849eced4a90810180546001600160a01b03199081169098179055968b16808652938520805490921683179091558054918201815590925292018054909116909117905580156106a4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b3360009081526065602052604090205460ff166106d95760405162461bcd60e51b81526004016104e590611a9e565b6001600160a01b038116600090815261010160205260408120805460ff191690555b6101025481101561080457816001600160a01b0316610102828154811061072457610724611ae6565b6000918252602090912001546001600160a01b0316036107f257610102805461074f90600190611afc565b8154811061075f5761075f611ae6565b60009182526020909120015461010280546001600160a01b03909216918390811061078c5761078c611ae6565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101028054806107cc576107cc611b0f565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b806107fc81611b25565b9150506106fb565b5050565b600033610816858285611034565b6001600160a01b0385166000908152610101602052604090205460ff168061085757506001600160a01b0384166000908152610101602052604090205460ff165b1561086c576108678585856110a8565b6108a8565b600061087784611253565b60ff549091506108929087906001600160a01b0316836110a8565b6108a686866108a18488611afc565b6110a8565b505b506001949350505050565b60006108bd6112a5565b905090565b6000336104408185856108d58383610c0f565b6108df9190611b3e565b610dd4565b600054610100900460ff1661090b5760405162461bcd60e51b81526004016104e590611b51565b336000908152606560205260409020805460ff1916600117905561092d611320565b565b61093761134f565b61092d60006113a9565b6001600160a01b038116600090815260cc6020526040812054610446565b6060606a80546103af9061194a565b6000338161097c8286610c0f565b9050838110156109dc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e5565b6108a88286868403610dd4565b336000908152610101602052604081205460ff1680610a2157506001600160a01b0383166000908152610101602052604090205460ff165b15610a3657610a313384846110a8565b610a6d565b6000610a4183611253565b60ff54909150610a5c9033906001600160a01b0316836110a8565b610a6b33856108a18487611afc565b505b50600192915050565b3360009081526065602052604090205460ff16610aa55760405162461bcd60e51b81526004016104e590611a9e565b61010055565b83421115610afb5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104e5565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b2a8c6113fb565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b8582611423565b90506000610b9582878787611471565b9050896001600160a01b0316816001600160a01b031614610bf85760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104e5565b610c038a8a8a610dd4565b50505050505050505050565b6001600160a01b03918216600090815260676020908152604080832093909416825291909152205490565b610c4261134f565b6001600160a01b038216600081815260656020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b3360009081526065602052604090205460ff16610cd05760405162461bcd60e51b81526004016104e590611a9e565b6001600160a01b0316600081815261010160205260408120805460ff19166001908117909155610102805491820181559091527f93bdaa6a4190909b7c3fbe8d42169ffe1cab19f51dfc8db24c71abf849eced4a0180546001600160a01b0319169091179055565b610d4061134f565b6001600160a01b038116610da55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e5565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355610dd1816113a9565b50565b6001600160a01b038316610e365760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e5565b6001600160a01b038216610e975760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e5565b6001600160a01b0383811660008181526067602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600054610100900460ff16610f1f5760405162461bcd60e51b81526004016104e590611b51565b6108048282611499565b600054610100900460ff16610f505760405162461bcd60e51b81526004016104e590611b51565b610dd181604051806040016040528060018152602001603160f81b8152506114de565b6001600160a01b038216610fc95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e5565b8060686000828254610fdb9190611b3e565b90915550506001600160a01b0382166000818152606660209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60006110408484610c0f565b905060001981146106a4578181101561109b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e5565b6106a48484848403610dd4565b6001600160a01b03831661110c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e5565b6001600160a01b03821661116e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e5565b6001600160a01b038316600090815260666020526040902054818110156111e65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e5565b6001600160a01b0380851660008181526066602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112469086815260200190565b60405180910390a36106a4565b60006101005460000361126857506000919050565b336000908152610101602052604090205460ff161561128957506000919050565b612710610100548361129b9190611a87565b6104469190611b9c565b60006108bd7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6112d460985490565b6099546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600054610100900460ff166113475760405162461bcd60e51b81526004016104e590611b51565b61092d61151f565b6033546001600160a01b0316331461092d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e5565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260cc602052604090208054600181018255905b50919050565b60006104466114306112a5565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114828787878761154f565b9150915061148f81611613565b5095945050505050565b600054610100900460ff166114c05760405162461bcd60e51b81526004016104e590611b51565b60696114cc8382611c22565b50606a6114d98282611c22565b505050565b600054610100900460ff166115055760405162461bcd60e51b81526004016104e590611b51565b815160209283012081519190920120609891909155609955565b600054610100900460ff166115465760405162461bcd60e51b81526004016104e590611b51565b61092d336113a9565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611586575060009050600361160a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156115da573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116035760006001925092505061160a565b9150600090505b94509492505050565b600081600481111561162757611627611ce2565b0361162f5750565b600181600481111561164357611643611ce2565b036116905760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104e5565b60028160048111156116a4576116a4611ce2565b036116f15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104e5565b600381600481111561170557611705611ce2565b03610dd15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104e5565b600060208083528351808285015260005b8181101561178a5785810183015185820160400152820161176e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146117c257600080fd5b919050565b600080604083850312156117da57600080fd5b6117e3836117ab565b946020939093013593505050565b60008060006060848603121561180657600080fd5b61180f846117ab565b925061181d602085016117ab565b9150604084013590509250925092565b60006020828403121561183f57600080fd5b611848826117ab565b9392505050565b60006020828403121561186157600080fd5b5035919050565b600080600080600080600060e0888a03121561188357600080fd5b61188c886117ab565b965061189a602089016117ab565b95506040880135945060608801359350608088013560ff811681146118be57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156118ee57600080fd5b6118f7836117ab565b9150611905602084016117ab565b90509250929050565b6000806040838503121561192157600080fd5b61192a836117ab565b91506020830135801515811461193f57600080fd5b809150509250929050565b600181811c9082168061195e57607f821691505b60208210810361141d57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119cf5781600019048211156119b5576119b561197e565b808516156119c257918102915b93841c9390800290611999565b509250929050565b6000826119e657506001610446565b816119f357506000610446565b8160018114611a095760028114611a1357611a2f565b6001915050610446565b60ff841115611a2457611a2461197e565b50506001821b610446565b5060208310610133831016604e8410600b8410161715611a52575081810a610446565b611a5c8383611994565b8060001904821115611a7057611a7061197e565b029392505050565b600061184860ff8416836119d7565b80820281158282048414176104465761044661197e565b60208082526028908201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604082015267373a3937b63632b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b818103818111156104465761044661197e565b634e487b7160e01b600052603160045260246000fd5b600060018201611b3757611b3761197e565b5060010190565b808201808211156104465761044661197e565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082611bb957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b601f8211156114d957600081815260208120601f850160051c81016020861015611bfb5750805b601f850160051c820191505b81811015611c1a57828155600101611c07565b505050505050565b815167ffffffffffffffff811115611c3c57611c3c611bbe565b611c5081611c4a845461194a565b84611bd4565b602080601f831160018114611c855760008415611c6d5750858301515b600019600386901b1c1916600185901b178555611c1a565b600085815260208120601f198616915b82811015611cb457888601518255948401946001909101908401611c95565b5085821015611cd25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205b64d2e55f4f943e6aaab9ef560287d816dc58744eaa83d0e4fcfa513a1498ac64736f6c63430008120033";

type CrabCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrabCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrabCoin__factory extends ContractFactory {
  constructor(...args: CrabCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrabCoin> {
    return super.deploy(overrides || {}) as Promise<CrabCoin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrabCoin {
    return super.attach(address) as CrabCoin;
  }
  override connect(signer: Signer): CrabCoin__factory {
    return super.connect(signer) as CrabCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrabCoinInterface {
    return new utils.Interface(_abi) as CrabCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrabCoin {
    return new Contract(address, _abi, signerOrProvider) as CrabCoin;
  }
}
