/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Gin1689Coin,
  Gin1689CoinInterface,
} from "../../../../contracts/token/Gin1689Coin.sol/Gin1689Coin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LPWANFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_defaultLPWANFee",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_LPWANFee",
        type: "uint256",
      },
    ],
    name: "setLPWANFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d37806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de578063cd98163c11610097578063dd62ed3e11610071578063dd62ed3e14610354578063e0dba60f14610367578063e7cd4a041461037a578063f2fde38b1461038d57600080fd5b8063cd98163c1461030b578063d505accf1461031e578063da8c229e1461033157600080fd5b8063715018a6146102b15780637ecebe00146102b95780638da5cb5b146102cc57806395d89b41146102dd578063a457c2d7146102e5578063a9059cbb146102f857600080fd5b8063313ce5671161014b5780634772b753116101255780634772b7531461024b5780635d79343d1461025557806361d027b31461025d57806370a082311461028857600080fd5b8063313ce567146102215780633644e51514610230578063395093511461023857600080fd5b806306fdde0314610193578063095ea7b3146101b15780631794bb3c146101d457806318160ddd146101e95780632042e5c2146101fb57806323b872dd1461020e575b600080fd5b61019b6103a0565b6040516101a89190611766565b60405180910390f35b6101c46101bf3660046117d0565b610432565b60405190151581526020016101a8565b6101e76101e23660046117fa565b61044c565b005b6068545b6040519081526020016101a8565b6101e7610209366004611836565b6106b3565b6101c461021c3660046117fa565b610811565b604051601281526020016101a8565b6101ed6108bc565b6101c46102463660046117d0565b6108cb565b6101ed6101005481565b6101e76108ed565b60ff54610270906001600160a01b031681565b6040516001600160a01b0390911681526020016101a8565b6101ed610296366004611836565b6001600160a01b031660009081526066602052604090205490565b6101e7610938565b6101ed6102c7366004611836565b61094a565b6033546001600160a01b0316610270565b61019b610968565b6101c46102f33660046117d0565b610977565b6101c46103063660046117d0565b6109f2565b6101e7610319366004611858565b610a7f565b6101e761032c366004611871565b610ab4565b6101c461033f366004611836565b60656020526000908152604090205460ff1681565b6101ed6103623660046118e4565b610c18565b6101e7610375366004611917565b610c43565b6101e7610388366004611836565b610caa565b6101e761039b366004611836565b610d41565b6060606980546103af90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103db90611953565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b600033610440818585610ddd565b60019150505b92915050565b600054610100900460ff161580801561046c5750600054600160ff909116105b806104865750303b158015610486575060005460ff166001145b6104ee5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610511576000805461ff0019166101001790555b6105196108ed565b6105666040518060400160405280600c81526020016b23b4b7189b1c1c9021b7b4b760a11b8152506040518060400160405280600781526020016647494e3136383960c81b815250610f01565b61058e6040518060400160405280600781526020016647494e3136383960c81b815250610f32565b60ff80546001600160a01b0319166001600160a01b0386161790556101008290556105d38360126105c090600a611a81565b6105ce906305f5e100611a90565b610f7c565b6001600160a01b03838116600081815261010160205260408082208054600160ff199182168117909255610102805480840182557f93bdaa6a4190909b7c3fbe8d42169ffe1cab19f51dfc8db24c71abf849eced4a90810180546001600160a01b03199081169098179055968b16808652938520805490921683179091558054918201815590925292018054909116909117905580156106ad576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b3360009081526065602052604090205460ff166106e25760405162461bcd60e51b81526004016104e590611aa7565b6001600160a01b038116600090815261010160205260408120805460ff191690555b6101025481101561080d57816001600160a01b0316610102828154811061072d5761072d611aef565b6000918252602090912001546001600160a01b0316036107fb57610102805461075890600190611b05565b8154811061076857610768611aef565b60009182526020909120015461010280546001600160a01b03909216918390811061079557610795611aef565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101028054806107d5576107d5611b18565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b8061080581611b2e565b915050610704565b5050565b60003361081f85828561103d565b6001600160a01b0385166000908152610101602052604090205460ff168061086057506001600160a01b0384166000908152610101602052604090205460ff165b15610875576108708585856110b1565b6108b1565b60006108808461125c565b60ff5490915061089b9087906001600160a01b0316836110b1565b6108af86866108aa8488611b05565b6110b1565b505b506001949350505050565b60006108c66112ae565b905090565b6000336104408185856108de8383610c18565b6108e89190611b47565b610ddd565b600054610100900460ff166109145760405162461bcd60e51b81526004016104e590611b5a565b336000908152606560205260409020805460ff19166001179055610936611329565b565b610940611358565b61093660006113b2565b6001600160a01b038116600090815260cc6020526040812054610446565b6060606a80546103af90611953565b600033816109858286610c18565b9050838110156109e55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e5565b6108b18286868403610ddd565b336000908152610101602052604081205460ff1680610a2a57506001600160a01b0383166000908152610101602052604090205460ff165b15610a3f57610a3a3384846110b1565b610a76565b6000610a4a8361125c565b60ff54909150610a659033906001600160a01b0316836110b1565b610a7433856108aa8487611b05565b505b50600192915050565b3360009081526065602052604090205460ff16610aae5760405162461bcd60e51b81526004016104e590611aa7565b61010055565b83421115610b045760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104e5565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b338c611404565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b8e8261142c565b90506000610b9e8287878761147a565b9050896001600160a01b0316816001600160a01b031614610c015760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104e5565b610c0c8a8a8a610ddd565b50505050505050505050565b6001600160a01b03918216600090815260676020908152604080832093909416825291909152205490565b610c4b611358565b6001600160a01b038216600081815260656020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b3360009081526065602052604090205460ff16610cd95760405162461bcd60e51b81526004016104e590611aa7565b6001600160a01b0316600081815261010160205260408120805460ff19166001908117909155610102805491820181559091527f93bdaa6a4190909b7c3fbe8d42169ffe1cab19f51dfc8db24c71abf849eced4a0180546001600160a01b0319169091179055565b610d49611358565b6001600160a01b038116610dae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e5565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355610dda816113b2565b50565b6001600160a01b038316610e3f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e5565b6001600160a01b038216610ea05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e5565b6001600160a01b0383811660008181526067602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600054610100900460ff16610f285760405162461bcd60e51b81526004016104e590611b5a565b61080d82826114a2565b600054610100900460ff16610f595760405162461bcd60e51b81526004016104e590611b5a565b610dda81604051806040016040528060018152602001603160f81b8152506114e7565b6001600160a01b038216610fd25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e5565b8060686000828254610fe49190611b47565b90915550506001600160a01b0382166000818152606660209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60006110498484610c18565b905060001981146106ad57818110156110a45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e5565b6106ad8484848403610ddd565b6001600160a01b0383166111155760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e5565b6001600160a01b0382166111775760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e5565b6001600160a01b038316600090815260666020526040902054818110156111ef5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e5565b6001600160a01b0380851660008181526066602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061124f9086815260200190565b60405180910390a36106ad565b60006101005460000361127157506000919050565b336000908152610101602052604090205460ff161561129257506000919050565b61271061010054836112a49190611a90565b6104469190611ba5565b60006108c67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6112dd60985490565b6099546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600054610100900460ff166113505760405162461bcd60e51b81526004016104e590611b5a565b610936611528565b6033546001600160a01b031633146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e5565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260cc602052604090208054600181018255905b50919050565b60006104466114396112ae565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061148b87878787611558565b915091506114988161161c565b5095945050505050565b600054610100900460ff166114c95760405162461bcd60e51b81526004016104e590611b5a565b60696114d58382611c2b565b50606a6114e28282611c2b565b505050565b600054610100900460ff1661150e5760405162461bcd60e51b81526004016104e590611b5a565b815160209283012081519190920120609891909155609955565b600054610100900460ff1661154f5760405162461bcd60e51b81526004016104e590611b5a565b610936336113b2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561158f5750600090506003611613565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156115e3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661160c57600060019250925050611613565b9150600090505b94509492505050565b600081600481111561163057611630611ceb565b036116385750565b600181600481111561164c5761164c611ceb565b036116995760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104e5565b60028160048111156116ad576116ad611ceb565b036116fa5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104e5565b600381600481111561170e5761170e611ceb565b03610dda5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104e5565b600060208083528351808285015260005b8181101561179357858101830151858201604001528201611777565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146117cb57600080fd5b919050565b600080604083850312156117e357600080fd5b6117ec836117b4565b946020939093013593505050565b60008060006060848603121561180f57600080fd5b611818846117b4565b9250611826602085016117b4565b9150604084013590509250925092565b60006020828403121561184857600080fd5b611851826117b4565b9392505050565b60006020828403121561186a57600080fd5b5035919050565b600080600080600080600060e0888a03121561188c57600080fd5b611895886117b4565b96506118a3602089016117b4565b95506040880135945060608801359350608088013560ff811681146118c757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156118f757600080fd5b611900836117b4565b915061190e602084016117b4565b90509250929050565b6000806040838503121561192a57600080fd5b611933836117b4565b91506020830135801515811461194857600080fd5b809150509250929050565b600181811c9082168061196757607f821691505b60208210810361142657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119d85781600019048211156119be576119be611987565b808516156119cb57918102915b93841c93908002906119a2565b509250929050565b6000826119ef57506001610446565b816119fc57506000610446565b8160018114611a125760028114611a1c57611a38565b6001915050610446565b60ff841115611a2d57611a2d611987565b50506001821b610446565b5060208310610133831016604e8410600b8410161715611a5b575081810a610446565b611a65838361199d565b8060001904821115611a7957611a79611987565b029392505050565b600061185160ff8416836119e0565b808202811582820484141761044657610446611987565b60208082526028908201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604082015267373a3937b63632b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b8181038181111561044657610446611987565b634e487b7160e01b600052603160045260246000fd5b600060018201611b4057611b40611987565b5060010190565b8082018082111561044657610446611987565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082611bc257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b601f8211156114e257600081815260208120601f850160051c81016020861015611c045750805b601f850160051c820191505b81811015611c2357828155600101611c10565b505050505050565b815167ffffffffffffffff811115611c4557611c45611bc7565b611c5981611c538454611953565b84611bdd565b602080601f831160018114611c8e5760008415611c765750858301515b600019600386901b1c1916600185901b178555611c23565b600085815260208120601f198616915b82811015611cbd57888601518255948401946001909101908401611c9e565b5085821015611cdb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c82d37316e3c18c23223834f7a9f081d0900e544305212c25f1533df7493303664736f6c63430008120033";

type Gin1689CoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Gin1689CoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gin1689Coin__factory extends ContractFactory {
  constructor(...args: Gin1689CoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gin1689Coin> {
    return super.deploy(overrides || {}) as Promise<Gin1689Coin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Gin1689Coin {
    return super.attach(address) as Gin1689Coin;
  }
  override connect(signer: Signer): Gin1689Coin__factory {
    return super.connect(signer) as Gin1689Coin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Gin1689CoinInterface {
    return new utils.Interface(_abi) as Gin1689CoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gin1689Coin {
    return new Contract(address, _abi, signerOrProvider) as Gin1689Coin;
  }
}
