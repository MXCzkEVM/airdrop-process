/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MEP1002NamingToken,
  MEP1002NamingTokenInterface,
} from "../../../../contracts/token/MEP1002NamingToken.sol/MEP1002NamingToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f95806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635d79343d116100de578063a22cb46511610097578063da8c229e11610071578063da8c229e14610314578063e0dba60f14610337578063e985e9c51461034a578063f2fde38b1461038657600080fd5b8063a22cb465146102db578063b88d4fde146102ee578063c87b56dd1461030157600080fd5b80635d79343d1461028c5780636352211e1461029457806370a08231146102a7578063715018a6146102ba5780638da5cb5b146102c257806395d89b41146102d357600080fd5b80632f745c59116101305780632f745c591461021a57806340c10f191461022d57806342842e0e146102405780634cd88b76146102535780634f6ccce71461026657806355f804b31461027957600080fd5b806301ffc9a71461017857806306fdde03146101a0578063081812fc146101b5578063095ea7b3146101e057806318160ddd146101f557806323b872dd14610207575b600080fd5b61018b610186366004611864565b610399565b60405190151581526020015b60405180910390f35b6101a86103c4565b60405161019791906118d1565b6101c86101c33660046118e4565b610456565b6040516001600160a01b039091168152602001610197565b6101f36101ee366004611919565b61047d565b005b60cc545b604051908152602001610197565b6101f3610215366004611943565b610597565b6101f9610228366004611919565b6105c8565b6101f361023b366004611919565b61065e565b6101f361024e366004611943565b61069b565b6101f3610261366004611a2b565b6106b6565b6101f96102743660046118e4565b6107d2565b6101f3610287366004611a8f565b610865565b6101f36108a0565b6101c86102a23660046118e4565b6108eb565b6101f96102b5366004611ac4565b61094b565b6101f36109d1565b6033546001600160a01b03166101c8565b6101a86109e3565b6101f36102e9366004611adf565b6109f2565b6101f36102fc366004611b1b565b6109fd565b6101a861030f3660046118e4565b610a35565b61018b610322366004611ac4565b60656020526000908152604090205460ff1681565b6101f3610345366004611adf565b610a9c565b61018b610358366004611b97565b6001600160a01b039182166000908152609d6020908152604080832093909416825291909152205460ff1690565b6101f3610394366004611ac4565b610b03565b60006001600160e01b0319821663780e9d6360e01b14806103be57506103be82610b9f565b92915050565b6060609880546103d390611bca565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff90611bca565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b5050505050905090565b600061046182610bef565b506000908152609c60205260409020546001600160a01b031690565b6000610488826108eb565b9050806001600160a01b0316836001600160a01b0316036104fa5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061051657506105168133610358565b6105885760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104f1565b6105928383610c4e565b505050565b6105a13382610cbc565b6105bd5760405162461bcd60e51b81526004016104f190611c04565b610592838383610d3b565b60006105d38361094b565b82106106355760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104f1565b506001600160a01b0391909116600090815260ca60209081526040808320938352929052205490565b3360009081526065602052604090205460ff1661068d5760405162461bcd60e51b81526004016104f190611c51565b6106978282610eac565b5050565b610592838383604051806020016040528060008152506109fd565b600054610100900460ff16158080156106d65750600054600160ff909116105b806106f05750303b1580156106f0575060005460ff166001145b6107535760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f1565b6000805460ff191660011790558015610776576000805461ff0019166101001790555b61077e6108a0565b6107888383610ec6565b8015610592576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006107dd60cc5490565b82106108405760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104f1565b60cc828154811061085357610853611c99565b90600052602060002001549050919050565b3360009081526065602052604090205460ff166108945760405162461bcd60e51b81526004016104f190611c51565b60fc6106978282611cfd565b600054610100900460ff166108c75760405162461bcd60e51b81526004016104f190611dbd565b336000908152606560205260409020805460ff191660011790556108e9610ef7565b565b6000818152609a60205260408120546001600160a01b0316806103be5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104f1565b60006001600160a01b0382166109b55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104f1565b506001600160a01b03166000908152609b602052604090205490565b6109d9610f26565b6108e96000610f80565b6060609980546103d390611bca565b610697338383610fd2565b610a073383610cbc565b610a235760405162461bcd60e51b81526004016104f190611c04565b610a2f848484846110a0565b50505050565b6060610a4082610bef565b6000610a4a6110d3565b90506000815111610a6a5760405180602001604052806000815250610a95565b80610a74846110e2565b604051602001610a85929190611e08565b6040516020818303038152906040525b9392505050565b610aa4610f26565b6001600160a01b038216600081815260656020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b610b0b610f26565b6001600160a01b038116610b705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f1565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355610b9c81610f80565b50565b60006001600160e01b031982166380ac58cd60e01b1480610bd057506001600160e01b03198216635b5e139f60e01b145b806103be57506301ffc9a760e01b6001600160e01b03198316146103be565b6000818152609a60205260409020546001600160a01b0316610b9c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104f1565b6000818152609c6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c83826108eb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cc8836108eb565b9050806001600160a01b0316846001600160a01b03161480610d0f57506001600160a01b038082166000908152609d602090815260408083209388168352929052205460ff165b80610d335750836001600160a01b0316610d2884610456565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d4e826108eb565b6001600160a01b031614610d745760405162461bcd60e51b81526004016104f190611e37565b6001600160a01b038216610dd65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104f1565b610de38383836001611175565b826001600160a01b0316610df6826108eb565b6001600160a01b031614610e1c5760405162461bcd60e51b81526004016104f190611e37565b6000818152609c6020908152604080832080546001600160a01b03199081169091556001600160a01b03878116808652609b8552838620805460001901905590871680865283862080546001019055868652609a90945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106978282604051806020016040528060008152506112a9565b600054610100900460ff16610eed5760405162461bcd60e51b81526004016104f190611dbd565b61069782826112dc565b600054610100900460ff16610f1e5760405162461bcd60e51b81526004016104f190611dbd565b6108e961131c565b6033546001600160a01b031633146108e95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110335760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104f1565b6001600160a01b038381166000818152609d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110ab848484610d3b565b6110b78484848461134c565b610a2f5760405162461bcd60e51b81526004016104f190611e7c565b606060fc80546103d390611bca565b606060006110ef8361144d565b600101905060008167ffffffffffffffff81111561110f5761110f61197f565b6040519080825280601f01601f191660200182016040528015611139576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461114357509392505050565b60018111156111e45760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016104f1565b816001600160a01b0385166112405761123b8160cc8054600083815260cd60205260408120829055600182018355919091527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe0155565b611263565b836001600160a01b0316856001600160a01b031614611263576112638582611525565b6001600160a01b03841661127f5761127a816115c2565b6112a2565b846001600160a01b0316846001600160a01b0316146112a2576112a28482611671565b5050505050565b6112b383836116b5565b6112c0600084848461134c565b6105925760405162461bcd60e51b81526004016104f190611e7c565b600054610100900460ff166113035760405162461bcd60e51b81526004016104f190611dbd565b609861130f8382611cfd565b5060996105928282611cfd565b600054610100900460ff166113435760405162461bcd60e51b81526004016104f190611dbd565b6108e933610f80565b60006001600160a01b0384163b1561144257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611390903390899088908890600401611ece565b6020604051808303816000875af19250505080156113cb575060408051601f3d908101601f191682019092526113c891810190611f0b565b60015b611428573d8080156113f9576040519150601f19603f3d011682016040523d82523d6000602084013e6113fe565b606091505b5080516000036114205760405162461bcd60e51b81526004016104f190611e7c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d33565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061148c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106114b8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106114d657662386f26fc10000830492506010015b6305f5e10083106114ee576305f5e100830492506008015b612710831061150257612710830492506004015b60648310611514576064830492506002015b600a83106103be5760010192915050565b600060016115328461094b565b61153c9190611f28565b600083815260cb602052604090205490915080821461158f576001600160a01b038416600090815260ca60209081526040808320858452825280832054848452818420819055835260cb90915290208190555b50600091825260cb602090815260408084208490556001600160a01b03909416835260ca81528383209183525290812055565b60cc546000906115d490600190611f28565b600083815260cd602052604081205460cc80549394509092849081106115fc576115fc611c99565b906000526020600020015490508060cc838154811061161d5761161d611c99565b600091825260208083209091019290925582815260cd909152604080822084905585825281205560cc80548061165557611655611f49565b6001900381819060005260206000200160009055905550505050565b600061167c8361094b565b6001600160a01b03909316600090815260ca60209081526040808320868452825280832085905593825260cb9052919091209190915550565b6001600160a01b03821661170b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104f1565b6000818152609a60205260409020546001600160a01b0316156117705760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f1565b61177e600083836001611175565b6000818152609a60205260409020546001600160a01b0316156117e35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f1565b6001600160a01b0382166000818152609b6020908152604080832080546001019055848352609a90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610b9c57600080fd5b60006020828403121561187657600080fd5b8135610a958161184e565b60005b8381101561189c578181015183820152602001611884565b50506000910152565b600081518084526118bd816020860160208601611881565b601f01601f19169290920160200192915050565b602081526000610a9560208301846118a5565b6000602082840312156118f657600080fd5b5035919050565b80356001600160a01b038116811461191457600080fd5b919050565b6000806040838503121561192c57600080fd5b611935836118fd565b946020939093013593505050565b60008060006060848603121561195857600080fd5b611961846118fd565b925061196f602085016118fd565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156119b0576119b061197f565b604051601f8501601f19908116603f011681019082821181831017156119d8576119d861197f565b816040528093508581528686860111156119f157600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611a1c57600080fd5b610a9583833560208501611995565b60008060408385031215611a3e57600080fd5b823567ffffffffffffffff80821115611a5657600080fd5b611a6286838701611a0b565b93506020850135915080821115611a7857600080fd5b50611a8585828601611a0b565b9150509250929050565b600060208284031215611aa157600080fd5b813567ffffffffffffffff811115611ab857600080fd5b610d3384828501611a0b565b600060208284031215611ad657600080fd5b610a95826118fd565b60008060408385031215611af257600080fd5b611afb836118fd565b915060208301358015158114611b1057600080fd5b809150509250929050565b60008060008060808587031215611b3157600080fd5b611b3a856118fd565b9350611b48602086016118fd565b925060408501359150606085013567ffffffffffffffff811115611b6b57600080fd5b8501601f81018713611b7c57600080fd5b611b8b87823560208401611995565b91505092959194509250565b60008060408385031215611baa57600080fd5b611bb3836118fd565b9150611bc1602084016118fd565b90509250929050565b600181811c90821680611bde57607f821691505b602082108103611bfe57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526028908201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604082015267373a3937b63632b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f82111561059257600081815260208120601f850160051c81016020861015611cd65750805b601f850160051c820191505b81811015611cf557828155600101611ce2565b505050505050565b815167ffffffffffffffff811115611d1757611d1761197f565b611d2b81611d258454611bca565b84611caf565b602080601f831160018114611d605760008415611d485750858301515b600019600386901b1c1916600185901b178555611cf5565b600085815260208120601f198616915b82811015611d8f57888601518255948401946001909101908401611d70565b5085821015611dad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351611e1a818460208801611881565b835190830190611e2e818360208801611881565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f01908301846118a5565b9695505050505050565b600060208284031215611f1d57600080fd5b8151610a958161184e565b818103818111156103be57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e304273fa73e361866686fe6660905a86d5bd2bd13317e0505248fc6ce0dd4fa64736f6c63430008120033";

type MEP1002NamingTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MEP1002NamingTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MEP1002NamingToken__factory extends ContractFactory {
  constructor(...args: MEP1002NamingTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MEP1002NamingToken> {
    return super.deploy(overrides || {}) as Promise<MEP1002NamingToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MEP1002NamingToken {
    return super.attach(address) as MEP1002NamingToken;
  }
  override connect(signer: Signer): MEP1002NamingToken__factory {
    return super.connect(signer) as MEP1002NamingToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MEP1002NamingTokenInterface {
    return new utils.Interface(_abi) as MEP1002NamingTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MEP1002NamingToken {
    return new Contract(address, _abi, signerOrProvider) as MEP1002NamingToken;
  }
}
