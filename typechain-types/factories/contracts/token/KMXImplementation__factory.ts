/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KMXImplementation,
  KMXImplementationInterface,
} from "../../../contracts/token/KMXImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ONLY_OWNER",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "KMXImplementationContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "KMXPriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "kmxPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "updateKMXPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331781556103e860015560405130917fc739d7218fb32bd280aa4c1646b330356a7c9eed066456f60c3fd065d8a33ab691a2610151806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633d84e69f146100465780634383e14f1461005b5780638da5cb5b14610077575b600080fd5b610059610054366004610102565b6100a2565b005b61006460015481565b6040519081526020015b60405180910390f35b60005461008a906001600160a01b031681565b6040516001600160a01b03909116815260200161006e565b6000546001600160a01b031633146100cd5760405163d238ed5960e01b815260040160405180910390fd5b6001819055604051819033907fc2ae1b1aa672bc44c06c91b0a182a3529109fc9444f59843d51bcbce73d0ed5290600090a350565b60006020828403121561011457600080fd5b503591905056fea26469706673582212204a8ad5a7e91fdd7ef25ee7eb2b1e4134d054a4515b57aa4f543835a2d5abfa9d64736f6c63430008120033";

type KMXImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KMXImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KMXImplementation__factory extends ContractFactory {
  constructor(...args: KMXImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KMXImplementation> {
    return super.deploy(overrides || {}) as Promise<KMXImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KMXImplementation {
    return super.attach(address) as KMXImplementation;
  }
  override connect(signer: Signer): KMXImplementation__factory {
    return super.connect(signer) as KMXImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KMXImplementationInterface {
    return new utils.Interface(_abi) as KMXImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KMXImplementation {
    return new Contract(address, _abi, signerOrProvider) as KMXImplementation;
  }
}
