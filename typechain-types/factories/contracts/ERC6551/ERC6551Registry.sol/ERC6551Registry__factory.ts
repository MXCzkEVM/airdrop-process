/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC6551Registry,
  ERC6551RegistryInterface,
} from "../../../../contracts/ERC6551/ERC6551Registry.sol/ERC6551Registry";

const _abi = [
  {
    inputs: [],
    name: "InitializationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "account",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610964806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063da7323b31161005b578063da7323b3146100e0578063da8c229e146100f3578063e0dba60f14610126578063f2fde38b1461013957600080fd5b80635d79343d1461008d5780635e9bc53614610097578063715018a6146100c75780638da5cb5b146100cf575b600080fd5b61009561014c565b005b6100aa6100a53660046106fc565b6101a0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100956101cf565b6033546001600160a01b03166100aa565b6100aa6100ee36600461074a565b6101e1565b6101166101013660046107fb565b60656020526000908152604090205460ff1681565b60405190151581526020016100be565b610095610134366004610816565b610327565b6100956101473660046107fb565b61038e565b600054610100900460ff1661017c5760405162461bcd60e51b815260040161017390610852565b60405180910390fd5b336000908152606560205260409020805460ff1916600117905561019e61042a565b565b6000806101b08787878787610459565b805160209091012090506101c483826104c2565b979650505050505050565b6101d76104d6565b61019e6000610530565b6000806101f18989898989610459565b905060006102098660001b83805190602001206104c2565b90506001600160a01b0381163b156102245791506101c49050565b61023060008784610582565b905083156102ba576000816001600160a01b0316868660405161025492919061089d565b6000604051808303816000865af19150503d8060008114610291576040519150601f19603f3d011682016040523d82523d6000602084013e610296565b606091505b50509050806102b857604051630337323560e31b815260040160405180910390fd5b505b604080516001600160a01b0383811682528c811660208301528183018c90528a1660608201526080810189905260a0810188905290517f07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f9181900360c00190a19998505050505050505050565b61032f6104d6565b6001600160a01b038216600081815260656020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6103966104d6565b6001600160a01b0381166103fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610173565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561042781610530565b50565b600054610100900460ff166104515760405162461bcd60e51b815260040161017390610852565b61019e610686565b60408051602081018390529081018590526001600160a01b0384166060828101919091526080820184905290869060a00160408051601f19818403018152908290526104a892916020016108ad565b604051602081830303815290604052905095945050505050565b60006104cf8383306106b6565b9392505050565b6033546001600160a01b0316331461019e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610173565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000834710156105d45760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610173565b81516000036106255760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610173565b8282516020840186f590506001600160a01b0381166104cf5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610173565b600054610100900460ff166106ad5760405162461bcd60e51b815260040161017390610852565b61019e33610530565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b80356001600160a01b03811681146106f757600080fd5b919050565b600080600080600060a0868803121561071457600080fd5b61071d866106e0565b945060208601359350610732604087016106e0565b94979396509394606081013594506080013592915050565b600080600080600080600060c0888a03121561076557600080fd5b61076e886106e0565b965060208801359550610783604089016106e0565b9450606088013593506080880135925060a088013567ffffffffffffffff808211156107ae57600080fd5b818a0191508a601f8301126107c257600080fd5b8135818111156107d157600080fd5b8b60208285010111156107e357600080fd5b60208301945080935050505092959891949750929550565b60006020828403121561080d57600080fd5b6104cf826106e0565b6000806040838503121561082957600080fd5b610832836106e0565b91506020830135801515811461084757600080fd5b809150509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b733d60ad80600a3d3981f3363d3d373d3d3d363d7360601b8152606083901b6bffffffffffffffffffffffff191660148201526e5af43d82803e903d91602b57fd5bf360881b60288201528151600090815b8181101561091c57602081860181015160378684010152016108ff565b5060009201603701918252509291505056fea26469706673582212202f110fcd5658936442ec352fd2498772ea5c6a205036310b85798e9632fd776264736f6c63430008120033";

type ERC6551RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC6551RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC6551Registry__factory extends ContractFactory {
  constructor(...args: ERC6551RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC6551Registry> {
    return super.deploy(overrides || {}) as Promise<ERC6551Registry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC6551Registry {
    return super.attach(address) as ERC6551Registry;
  }
  override connect(signer: Signer): ERC6551Registry__factory {
    return super.connect(signer) as ERC6551Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC6551RegistryInterface {
    return new utils.Interface(_abi) as ERC6551RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC6551Registry {
    return new Contract(address, _abi, signerOrProvider) as ERC6551Registry;
  }
}
