/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ISOApplication,
  ISOApplicationInterface,
} from "../../../../contracts/token/MEP801.sol/ISOApplication";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ONLY_OWNER",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "applicationName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "businessOwnerAddress",
        type: "address",
      },
    ],
    name: "ISOApplicationDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "applicationName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161058238038061058283398101604081905261002f916100d0565b600080546001600160a01b03191633179055600161004d8282610205565b50604051339061005e9083906102c4565b6040519081900381209030907f1e3170c72a4a6556156f51b7feb0730e1618fe38d9a85aba2715b76a8ad21cf290600090a4506102e0565b634e487b7160e01b600052604160045260246000fd5b60005b838110156100c75781810151838201526020016100af565b50506000910152565b6000602082840312156100e257600080fd5b81516001600160401b03808211156100f957600080fd5b818401915084601f83011261010d57600080fd5b81518181111561011f5761011f610096565b604051601f8201601f19908116603f0116810190838211818310171561014757610147610096565b8160405282815287602084870101111561016057600080fd5b6101718360208301602088016100ac565b979650505050505050565b600181811c9082168061019057607f821691505b6020821081036101b057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020057600081815260208120601f850160051c810160208610156101dd5750805b601f850160051c820191505b818110156101fc578281556001016101e9565b5050505b505050565b81516001600160401b0381111561021e5761021e610096565b6102328161022c845461017c565b846101b6565b602080601f831160018114610267576000841561024f5750858301515b600019600386901b1c1916600185901b1785556101fc565b600085815260208120601f198616915b8281101561029657888601518255948401946001909101908401610277565b50858210156102b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516102d68184602087016100ac565b9190910192915050565b610293806102ef6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063319f4cdc146100465780638da5cb5b14610064578063a6f9dae11461008f575b600080fd5b61004e6100a4565b60405161005b91906101a5565b60405180910390f35b600054610077906001600160a01b031681565b6040516001600160a01b03909116815260200161005b565b6100a261009d3660046101f3565b610132565b005b600180546100b190610223565b80601f01602080910402602001604051908101604052809291908181526020018280546100dd90610223565b801561012a5780601f106100ff5761010080835404028352916020019161012a565b820191906000526020600020905b81548152906001019060200180831161010d57829003601f168201915b505050505081565b6000546001600160a01b0316331461015d5760405163d238ed5960e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405142927f0f17057c058227955304580e8ad3305c4fff882badabd5340cdc5eb55933f30191a350565b600060208083528351808285015260005b818110156101d2578581018301518582016040015282016101b6565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561020557600080fd5b81356001600160a01b038116811461021c57600080fd5b9392505050565b600181811c9082168061023757607f821691505b60208210810361025757634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b30b2a28e283f135058ac7ee4f3b6fbe119fc34c15400d2bfc924ee76bb4dcbd64736f6c63430008120033";

type ISOApplicationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ISOApplicationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ISOApplication__factory extends ContractFactory {
  constructor(...args: ISOApplicationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ISOApplication> {
    return super.deploy(_name, overrides || {}) as Promise<ISOApplication>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {});
  }
  override attach(address: string): ISOApplication {
    return super.attach(address) as ISOApplication;
  }
  override connect(signer: Signer): ISOApplication__factory {
    return super.connect(signer) as ISOApplication__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ISOApplicationInterface {
    return new utils.Interface(_abi) as ISOApplicationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISOApplication {
    return new Contract(address, _abi, signerOrProvider) as ISOApplication;
  }
}
