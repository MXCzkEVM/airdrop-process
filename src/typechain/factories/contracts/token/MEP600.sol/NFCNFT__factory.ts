/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFCNFT,
  NFCNFTInterface,
} from "../../../../contracts/token/MEP600.sol/NFCNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketPlaceContractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TOKEN_ALREADY_PROVISIONED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_tag",
        type: "bytes32",
      },
    ],
    name: "NFCNFTProvisioned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_nfcTag",
        type: "bytes32",
      },
    ],
    name: "mintNFCNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nfcnftTag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftnfcTag",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3b38038062001a3b833981016040819052620000349162000153565b818160006200004483826200026c565b5060016200005382826200026c565b505060088054336001600160a01b031991821617909155600980549091166001600160a01b0395909516949094179093555062000338915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000b657600080fd5b81516001600160401b0380821115620000d357620000d36200008e565b604051601f8301601f19908116603f01168101908282118183101715620000fe57620000fe6200008e565b816040528381526020925086838588010111156200011b57600080fd5b600091505b838210156200013f578582018301518183018401529082019062000120565b600093810190920192909252949350505050565b6000806000606084860312156200016957600080fd5b83516001600160a01b03811681146200018157600080fd5b60208501519093506001600160401b03808211156200019f57600080fd5b620001ad87838801620000a4565b93506040860151915080821115620001c457600080fd5b50620001d386828701620000a4565b9150509250925092565b600181811c90821680620001f257607f821691505b6020821081036200021357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200026757600081815260208120601f850160051c81016020861015620002425750805b601f850160051c820191505b8181101562000263578281556001016200024e565b5050505b505050565b81516001600160401b038111156200028857620002886200008e565b620002a081620002998454620001dd565b8462000219565b602080601f831160018114620002d85760008415620002bf5750858301515b600019600386901b1c1916600185901b17855562000263565b600085815260208120601f198616915b828110156200030957888601518255948401946001909101908401620002e8565b5085821015620003285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116f380620003486000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb46514610260578063b88d4fde14610273578063c87b56dd14610286578063e985e9c514610299578063f6b4dfb4146102d557600080fd5b80636352211e1461021f57806370a08231146102325780638da5cb5b1461024557806395d89b411461025857600080fd5b8063095ea7b3116100e9578063095ea7b3146101985780631234b056146101ab57806323b872dd146101d9578063359e5839146101ec57806342842e0e1461020c57600080fd5b8063013e7cb31461011b57806301ffc9a71461013057806306fdde0314610158578063081812fc1461016d575b600080fd5b61012e610129366004611178565b6102e8565b005b61014361013e3660046111e7565b61037e565b60405190151581526020015b60405180910390f35b6101606103d0565b60405161014f9190611254565b61018061017b366004611267565b610462565b6040516001600160a01b03909116815260200161014f565b61012e6101a636600461129c565b610489565b6101cb6101b9366004611267565b600b6020526000908152604090205481565b60405190815260200161014f565b61012e6101e73660046112c6565b6105a3565b6101cb6101fa366004611267565b600a6020526000908152604090205481565b61012e61021a3660046112c6565b6105d4565b61018061022d366004611267565b6105ef565b6101cb610240366004611302565b61064f565b600854610180906001600160a01b031681565b6101606106d5565b61012e61026e36600461131d565b6106e4565b61012e610281366004611359565b6106f3565b610160610294366004611267565b61072b565b6101436102a73660046113d5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600954610180906001600160a01b031681565b60006102f360075490565b9050610303600780546001019055565b61030d338261083b565b61031781846109c6565b60095461032e906001600160a01b031660016106e4565b6000818152600a60209081526040808320859055848352600b90915280822083905551839183917f88bb751c174fb32f75b32a07b08974f794905ee3e77fec21f0d3f263fb4beb789190a3505050565b60006001600160e01b031982166380ac58cd60e01b14806103af57506001600160e01b03198216635b5e139f60e01b145b806103ca57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103df90611408565b80601f016020809104026020016040519081016040528092919081815260200182805461040b90611408565b80156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b5050505050905090565b600061046d82610a59565b506000908152600460205260409020546001600160a01b031690565b6000610494826105ef565b9050806001600160a01b0316836001600160a01b0316036105065760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610522575061052281336102a7565b6105945760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104fd565b61059e8383610abb565b505050565b6105ad3382610b29565b6105c95760405162461bcd60e51b81526004016104fd90611442565b61059e838383610ba7565b61059e838383604051806020016040528060008152506106f3565b6000818152600260205260408120546001600160a01b0316806103ca5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104fd565b60006001600160a01b0382166106b95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104fd565b506001600160a01b031660009081526003602052604090205490565b6060600180546103df90611408565b6106ef338383610d0b565b5050565b6106fd3383610b29565b6107195760405162461bcd60e51b81526004016104fd90611442565b61072584848484610dd9565b50505050565b606061073682610a59565b6000828152600660205260408120805461074f90611408565b80601f016020809104026020016040519081016040528092919081815260200182805461077b90611408565b80156107c85780601f1061079d576101008083540402835291602001916107c8565b820191906000526020600020905b8154815290600101906020018083116107ab57829003601f168201915b5050505050905060006107e660408051602081019091526000815290565b905080516000036107f8575092915050565b81511561082a57808260405160200161081292919061148f565b60405160208183030381529060405292505050919050565b61083384610e0c565b949350505050565b6001600160a01b0382166108915760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104fd565b6000818152600260205260409020546001600160a01b0316156108f65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fd565b6000818152600260205260409020546001600160a01b03161561095b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fd565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610a415760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104fd565b600082815260066020526040902061059e828261150c565b6000818152600260205260409020546001600160a01b0316610ab85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104fd565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610af0826105ef565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b35836105ef565b9050806001600160a01b0316846001600160a01b03161480610b7c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108335750836001600160a01b0316610b9584610462565b6001600160a01b031614949350505050565b826001600160a01b0316610bba826105ef565b6001600160a01b031614610be05760405162461bcd60e51b81526004016104fd906115cc565b6001600160a01b038216610c425760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104fd565b826001600160a01b0316610c55826105ef565b6001600160a01b031614610c7b5760405162461bcd60e51b81526004016104fd906115cc565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610d6c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104fd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610de4848484610ba7565b610df084848484610e80565b6107255760405162461bcd60e51b81526004016104fd90611611565b6060610e1782610a59565b6000610e2e60408051602081019091526000815290565b90506000815111610e4e5760405180602001604052806000815250610e79565b80610e5884610f81565b604051602001610e6992919061148f565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b15610f7657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ec4903390899088908890600401611663565b6020604051808303816000875af1925050508015610eff575060408051601f3d908101601f19168201909252610efc918101906116a0565b60015b610f5c573d808015610f2d576040519150601f19603f3d011682016040523d82523d6000602084013e610f32565b606091505b508051600003610f545760405162461bcd60e51b81526004016104fd90611611565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610833565b506001949350505050565b60606000610f8e83611014565b600101905060008167ffffffffffffffff811115610fae57610fae6110ec565b6040519080825280601f01601f191660200182016040528015610fd8576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fe257509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110535772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061107f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061109d57662386f26fc10000830492506010015b6305f5e10083106110b5576305f5e100830492506008015b61271083106110c957612710830492506004015b606483106110db576064830492506002015b600a83106103ca5760010192915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561111d5761111d6110ec565b604051601f8501601f19908116603f01168101908282118183101715611145576111456110ec565b8160405280935085815286868601111561115e57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561118b57600080fd5b823567ffffffffffffffff8111156111a257600080fd5b8301601f810185136111b357600080fd5b6111c285823560208401611102565b95602094909401359450505050565b6001600160e01b031981168114610ab857600080fd5b6000602082840312156111f957600080fd5b8135610e79816111d1565b60005b8381101561121f578181015183820152602001611207565b50506000910152565b60008151808452611240816020860160208601611204565b601f01601f19169290920160200192915050565b602081526000610e796020830184611228565b60006020828403121561127957600080fd5b5035919050565b80356001600160a01b038116811461129757600080fd5b919050565b600080604083850312156112af57600080fd5b6112b883611280565b946020939093013593505050565b6000806000606084860312156112db57600080fd5b6112e484611280565b92506112f260208501611280565b9150604084013590509250925092565b60006020828403121561131457600080fd5b610e7982611280565b6000806040838503121561133057600080fd5b61133983611280565b91506020830135801515811461134e57600080fd5b809150509250929050565b6000806000806080858703121561136f57600080fd5b61137885611280565b935061138660208601611280565b925060408501359150606085013567ffffffffffffffff8111156113a957600080fd5b8501601f810187136113ba57600080fd5b6113c987823560208401611102565b91505092959194509250565b600080604083850312156113e857600080fd5b6113f183611280565b91506113ff60208401611280565b90509250929050565b600181811c9082168061141c57607f821691505b60208210810361143c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516114a1818460208801611204565b8351908301906114b5818360208801611204565b01949350505050565b601f82111561059e57600081815260208120601f850160051c810160208610156114e55750805b601f850160051c820191505b81811015611504578281556001016114f1565b505050505050565b815167ffffffffffffffff811115611526576115266110ec565b61153a816115348454611408565b846114be565b602080601f83116001811461156f57600084156115575750858301515b600019600386901b1c1916600185901b178555611504565b600085815260208120601f198616915b8281101561159e5788860151825594840194600190910190840161157f565b50858210156115bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061169690830184611228565b9695505050505050565b6000602082840312156116b257600080fd5b8151610e79816111d156fea26469706673582212201a93c54832d221439860dfb0201577b142e6098a2afb6b9c3373468656ac53b964736f6c63430008120033";

type NFCNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFCNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFCNFT__factory extends ContractFactory {
  constructor(...args: NFCNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketPlaceContractAddress: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFCNFT> {
    return super.deploy(
      _marketPlaceContractAddress,
      name,
      symbol,
      overrides || {}
    ) as Promise<NFCNFT>;
  }
  override getDeployTransaction(
    _marketPlaceContractAddress: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketPlaceContractAddress,
      name,
      symbol,
      overrides || {}
    );
  }
  override attach(address: string): NFCNFT {
    return super.attach(address) as NFCNFT;
  }
  override connect(signer: Signer): NFCNFT__factory {
    return super.connect(signer) as NFCNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFCNFTInterface {
    return new utils.Interface(_abi) as NFCNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFCNFT {
    return new Contract(address, _abi, signerOrProvider) as NFCNFT;
  }
}
