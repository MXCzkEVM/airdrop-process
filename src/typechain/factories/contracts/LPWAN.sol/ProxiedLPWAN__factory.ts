/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProxiedLPWAN,
  ProxiedLPWANInterface,
} from "../../../contracts/LPWAN.sol/ProxiedLPWAN";

const _abi = [
  {
    inputs: [],
    name: "INVALID_REWARD",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SIGNATURE",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BurnExcessToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnExcessToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "burn",
        type: "bool",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "claimSupernodeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMEP1004Addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "MEP1004Address_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_SNCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_H3Index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_regionID",
        type: "string",
      },
    ],
    name: "mintMEP1004Stations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_H3Index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_SNCode",
        type: "string",
      },
      {
        internalType: "string",
        name: "regionID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "mintMEP1004StationsBySignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "MEP1004Address",
        type: "address",
      },
    ],
    name: "setMEP1004Addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_MEP1002TokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_MEP1004TokenIds",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_item",
        type: "string",
      },
    ],
    name: "submitLocationProofs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50600160ca5560805161215e61005160003960008181610540015281816105800152818161061f0152818161065f01526106f2015261215e6000f3fe6080604052600436106101355760003560e01c80638da5cb5b116100ab578063da3e33971161006f578063da3e33971461034c578063da8c229e1461037c578063e0dba60f146103ac578063e4340081146103cc578063f2fde38b146103ec578063f4a6842a1461040c57600080fd5b80638da5cb5b146102b057806390ce65e7146102ce5780639234e6e3146102ec578063c4d66de81461030c578063cdceeba01461032c57600080fd5b80634f1ef286116100fd5780634f1ef2861461021e57806352d1902d146102315780635a6b26ba146102465780635d79343d14610266578063715018a61461027b578063772dc0711461029057600080fd5b8063157b43781461013a5780632b371f351461017757806330adf81f146101b45780633644e515146101e75780633659cfe6146101fc575b600080fd5b34801561014657600080fd5b5061015a610155366004611906565b61042c565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b507f8dd9456617caccce5d33090b1c7aa479dcb0d9a117544a09b7565983194f27fe5b60405190815260200161016e565b3480156101c057600080fd5b507f3be6e386cfa60d071d03c39da574d29ace3a05f155c71cbdc1d29d0152b7dac86101a6565b3480156101f357600080fd5b506101a6610487565b34801561020857600080fd5b5061021c610217366004611906565b610536565b005b61021c61022c3660046119c0565b610615565b34801561023d57600080fd5b506101a66106e5565b34801561025257600080fd5b5061021c610261366004611a22565b610798565b34801561027257600080fd5b5061021c6107da565b34801561028757600080fd5b5061021c610825565b34801561029c57600080fd5b5061021c6102ab366004611a6c565b610837565b3480156102bc57600080fd5b506097546001600160a01b031661015a565b3480156102da57600080fd5b5060cb546001600160a01b031661015a565b3480156102f857600080fd5b5061021c610307366004611b3a565b6108d4565b34801561031857600080fd5b5061021c610327366004611906565b610a77565b34801561033857600080fd5b5061021c610347366004611bbb565b610ba3565b34801561035857600080fd5b5061036c610367366004611c8e565b610c3d565b604051901515815260200161016e565b34801561038857600080fd5b5061036c610397366004611906565b60c96020526000908152604090205460ff1681565b3480156103b857600080fd5b5061021c6103c7366004611cca565b610ce9565b3480156103d857600080fd5b5061021c6103e7366004611d01565b610d50565b3480156103f857600080fd5b5061021c610407366004611906565b610dce565b34801561041857600080fd5b5061021c610427366004611dbb565b610e67565b33600090815260c9602052604081205460ff166104645760405162461bcd60e51b815260040161045b90611dd4565b60405180910390fd5b5060cb80546001600160a01b0319166001600160a01b038316179055805b919050565b6000610531604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f2b9b15b8aef2ef8984e92922c277253d63dd067d601c6619104c01cf04ce2754918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361057e5760405162461bcd60e51b815260040161045b90611e1c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105c76000805160206120e2833981519152546001600160a01b031690565b6001600160a01b0316146105ed5760405162461bcd60e51b815260040161045b90611e68565b6105f681610ede565b6040805160008082526020820190925261061291839190610ee6565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361065d5760405162461bcd60e51b815260040161045b90611e1c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106a66000805160206120e2833981519152546001600160a01b031690565b6001600160a01b0316146106cc5760405162461bcd60e51b815260040161045b90611e68565b6106d582610ede565b6106e182826001610ee6565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107855760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161045b565b506000805160206120e283398151915290565b33600090815260c9602052604090205460ff166107c75760405162461bcd60e51b815260040161045b90611dd4565b6106e16001600160a01b03831682611056565b600054610100900460ff166108015760405162461bcd60e51b815260040161045b90611eb4565b33600090815260c960205260409020805460ff1916600117905561082361110c565b565b61082d61113b565b6108236000611195565b33600090815260c9602052604090205460ff166108665760405162461bcd60e51b815260040161045b90611dd4565b60cb546040516303dd904360e41b81526001600160a01b0390911690633dd904309061089c908790879087908790600401611f4f565b600060405180830381600087803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b5050505050505050565b6108dc6111e7565b6001600160a01b038316600090815260c9602052604090205460ff1661091557604051631468054760e31b815260040160405180910390fd5b6000610922868533611240565b9050610965848285858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112f292505050565b61098257604051631468054760e31b815260040160405180910390fd5b33600090815260cc60205260409020548610156109b2576040516393e2d7eb60e01b815260040160405180910390fd5b33600090815260cc60205260408120546109cc9088611f96565b33600090815260cc60205260409020889055905085156109f6576109f1600082611073565b610a09565b610a096001600160a01b03891682611056565b85610a145787610a17565b60005b6001600160a01b0316336001600160a01b03167f7e77f685b38c861064cb08f2776eb5dfd3c82f652ed9f21221b8c53b75628e5183604051610a5b91815260200190565b60405180910390a35050610a6f600160ca55565b505050505050565b600054610100900460ff1615808015610a975750600054600160ff909116105b80610ab15750303b158015610ab1575060005460ff166001145b610b145760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045b565b6000805460ff191660011790558015610b37576000805461ff0019166101001790555b60cb80546001600160a01b0319166001600160a01b038416179055610b5a6107da565b80156106e1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b33600090815260c9602052604090205460ff16610bd25760405162461bcd60e51b815260040161045b90611dd4565b60cb546040516306fde15160e31b81526001600160a01b03909116906337ef0a8890610c0690869086908690600401611fb7565b600060405180830381600087803b158015610c2057600080fd5b505af1158015610c34573d6000803e3d6000fd5b50505050505050565b33600090815260c9602052604081205460ff16610c6c5760405162461bcd60e51b815260040161045b90611dd4565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b3906044016020604051808303816000875af1158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf919061200c565b90505b9392505050565b610cf161113b565b6001600160a01b038216600081815260c96020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b610d5d8686858585611434565b60cb546040516303dd904360e41b81526001600160a01b0390911690633dd9043090610d93908a9089908b908a90600401611f4f565b600060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b5050505050505050505050565b610dd661113b565b6001600160a01b038116610e3b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045b565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561061281611195565b33600090815260c9602052604090205460ff16610e965760405162461bcd60e51b815260040161045b90611dd4565b610ea1600082611073565b437f50b7fb3383de2508212f88c1dd0d32ddf0ca63749f5ff5d6c06538f9f872ae4e82604051610ed391815260200190565b60405180910390a250565b61061261113b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f1e57610f19836114db565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f78575060408051601f3d908101601f19168201909252610f7591810190612029565b60015b610fdb5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161045b565b6000805160206120e2833981519152811461104a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161045b565b50610f19838383611577565b80158061106a57506001600160a01b038216155b15611073575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110c0576040519150601f19603f3d011682016040523d82523d6000602084013e6110c5565b606091505b5050905080610f195760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161045b565b600054610100900460ff166111335760405162461bcd60e51b815260040161045b90611eb4565b6108236115a2565b6097546001600160a01b031633146108235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161045b565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260ca54036112395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161045b565b600260ca55565b600061124a610487565b7f8dd9456617caccce5d33090b1c7aa479dcb0d9a117544a09b7565983194f27fe60408051602081019290925281018690526001600160a01b0380861660608301528416608082015260a001604051602081830303815290604052805190602001206040516020016112d392919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090509392505050565b600080600061130185856115d2565b9092509050600081600481111561131a5761131a612042565b1480156113385750856001600160a01b0316826001600160a01b0316145b1561134857600192505050610ce2565b600080876001600160a01b0316631626ba7e60e01b8888604051602401611370929190612058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516113ae9190612071565b600060405180830381855afa9150503d80600081146113e9576040519150601f19603f3d011682016040523d82523d6000602084013e6113ee565b606091505b5091509150818015611401575080516020145b801561142857508051630b135d3f60e11b906114269083016020908101908401612029565b145b98975050505050505050565b6001600160a01b038316600090815260c9602052604090205460ff1661146d57604051631468054760e31b815260040160405180910390fd5b600061147b86868633611617565b90506114be848285858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112f292505050565b610a6f57604051631468054760e31b815260040160405180910390fd5b6001600160a01b0381163b6115485760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161045b565b6000805160206120e283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611580836116b7565b60008251118061158d5750805b15610f195761159c83836116f7565b50505050565b600054610100900460ff166115c95760405162461bcd60e51b815260040161045b90611eb4565b61082333611195565b60008082516041036116085760208301516040840151606085015160001a6115fc878285856117ed565b94509450505050611610565b506000905060025b9250929050565b6000611621610487565b7f3be6e386cfa60d071d03c39da574d29ace3a05f155c71cbdc1d29d0152b7dac88686868660405160200161165a95949392919061208d565b6040516020818303038152906040528051906020012060405160200161169792919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050949350505050565b6116c0816114db565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61175f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161045b565b600080846001600160a01b03168460405161177a9190612071565b600060405180830381855af49150503d80600081146117b5576040519150601f19603f3d011682016040523d82523d6000602084013e6117ba565b606091505b50915091506117e28282604051806060016040528060278152602001612102602791396118b1565b925050505b92915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561182457506000905060036118a8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611878573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118a1576000600192509250506118a8565b9150600090505b94509492505050565b606083156118c0575081610ce2565b610ce283838151156118d55781518083602001fd5b8060405162461bcd60e51b815260040161045b91906120ce565b80356001600160a01b038116811461048257600080fd5b60006020828403121561191857600080fd5b610ce2826118ef565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561196057611960611921565b604052919050565b600067ffffffffffffffff83111561198257611982611921565b611995601f8401601f1916602001611937565b90508281528383830111156119a957600080fd5b828260208301376000602084830101529392505050565b600080604083850312156119d357600080fd5b6119dc836118ef565b9150602083013567ffffffffffffffff8111156119f857600080fd5b8301601f81018513611a0957600080fd5b611a1885823560208401611968565b9150509250929050565b60008060408385031215611a3557600080fd5b611a3e836118ef565b946020939093013593505050565b600082601f830112611a5d57600080fd5b610ce283833560208501611968565b60008060008060808587031215611a8257600080fd5b611a8b856118ef565b9350602085013567ffffffffffffffff80821115611aa857600080fd5b611ab488838901611a4c565b9450604087013593506060870135915080821115611ad157600080fd5b50611ade87828801611a4c565b91505092959194509250565b801515811461061257600080fd5b60008083601f840112611b0a57600080fd5b50813567ffffffffffffffff811115611b2257600080fd5b60208301915083602082850101111561161057600080fd5b60008060008060008060a08789031215611b5357600080fd5b611b5c876118ef565b9550602087013594506040870135611b7381611aea565b9350611b81606088016118ef565b9250608087013567ffffffffffffffff811115611b9d57600080fd5b611ba989828a01611af8565b979a9699509497509295939492505050565b600080600060608486031215611bd057600080fd5b8335925060208085013567ffffffffffffffff80821115611bf057600080fd5b818701915087601f830112611c0457600080fd5b813581811115611c1657611c16611921565b8060051b611c25858201611937565b918252838101850191858101908b841115611c3f57600080fd5b948601945b83861015611c5d57853582529486019490860190611c44565b97505050506040870135925080831115611c7657600080fd5b5050611c8486828701611a4c565b9150509250925092565b600080600060608486031215611ca357600080fd5b611cac846118ef565b9250611cba602085016118ef565b9150604084013590509250925092565b60008060408385031215611cdd57600080fd5b611ce6836118ef565b91506020830135611cf681611aea565b809150509250929050565b600080600080600080600060c0888a031215611d1c57600080fd5b611d25886118ef565b965060208801359550604088013567ffffffffffffffff80821115611d4957600080fd5b611d558b838c01611a4c565b965060608a0135915080821115611d6b57600080fd5b611d778b838c01611a4c565b9550611d8560808b016118ef565b945060a08a0135915080821115611d9b57600080fd5b50611da88a828b01611af8565b989b979a50959850939692959293505050565b600060208284031215611dcd57600080fd5b5035919050565b60208082526028908201527f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f604082015267373a3937b63632b960c11b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015611f1a578181015183820152602001611f02565b50506000910152565b60008151808452611f3b816020860160208601611eff565b601f01601f19169290920160200192915050565b6001600160a01b0385168152608060208201819052600090611f7390830186611f23565b8460408401528281036060840152611f8b8185611f23565b979650505050505050565b818103818111156117e757634e487b7160e01b600052601160045260246000fd5b6000606082018583526020606081850152818651808452608086019150828801935060005b81811015611ff857845183529383019391830191600101611fdc565b505084810360408601526114288187611f23565b60006020828403121561201e57600080fd5b8151610ce281611aea565b60006020828403121561203b57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b828152604060208201526000610cdf6040830184611f23565b60008251612083818460208701611eff565b9190910192915050565b85815284602082015260a0604082015260006120ac60a0830186611f23565b6001600160a01b03948516606084015292909316608090910152949350505050565b602081526000610ce26020830184611f2356fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122088e974c3d9e7e98b4cbd9e7cd8d191db54278a4114a64a28306362cabd1b4e2864736f6c63430008120033";

type ProxiedLPWANConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxiedLPWANConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxiedLPWAN__factory extends ContractFactory {
  constructor(...args: ProxiedLPWANConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxiedLPWAN> {
    return super.deploy(overrides || {}) as Promise<ProxiedLPWAN>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxiedLPWAN {
    return super.attach(address) as ProxiedLPWAN;
  }
  override connect(signer: Signer): ProxiedLPWAN__factory {
    return super.connect(signer) as ProxiedLPWAN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxiedLPWANInterface {
    return new utils.Interface(_abi) as ProxiedLPWANInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxiedLPWAN {
    return new Contract(address, _abi, signerOrProvider) as ProxiedLPWAN;
  }
}
