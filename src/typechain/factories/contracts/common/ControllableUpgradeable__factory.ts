/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ControllableUpgradeable,
  ControllableUpgradeableInterface,
} from "../../../contracts/common/ControllableUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__Controllable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610461806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635d79343d14610067578063715018a6146100715780638da5cb5b14610079578063da8c229e14610099578063e0dba60f146100cc578063f2fde38b146100df575b600080fd5b61006f6100f2565b005b61006f610146565b6033546040516001600160a01b0390911681526020015b60405180910390f35b6100bc6100a7366004610382565b60656020526000908152604090205460ff1681565b6040519015158152602001610090565b61006f6100da3660046103a4565b610158565b61006f6100ed366004610382565b6101bf565b600054610100900460ff166101225760405162461bcd60e51b8152600401610119906103e0565b60405180910390fd5b336000908152606560205260409020805460ff1916600117905561014461025b565b565b61014e61028a565b61014460006102e4565b61016061028a565b6001600160a01b038216600081815260656020908152604091829020805460ff191685151590811790915591519182527f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87910160405180910390a25050565b6101c761028a565b6001600160a01b03811661022c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610119565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355610258816102e4565b50565b600054610100900460ff166102825760405162461bcd60e51b8152600401610119906103e0565b610144610336565b6033546001600160a01b031633146101445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610119565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661035d5760405162461bcd60e51b8152600401610119906103e0565b610144336102e4565b80356001600160a01b038116811461037d57600080fd5b919050565b60006020828403121561039457600080fd5b61039d82610366565b9392505050565b600080604083850312156103b757600080fd5b6103c083610366565b9150602083013580151581146103d557600080fd5b809150509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212202ac488aa320f2e8a9fffcf893a4bd028f6707e480b1294f74275b3c0890e7d6464736f6c63430008120033";

type ControllableUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllableUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ControllableUpgradeable__factory extends ContractFactory {
  constructor(...args: ControllableUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ControllableUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ControllableUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ControllableUpgradeable {
    return super.attach(address) as ControllableUpgradeable;
  }
  override connect(signer: Signer): ControllableUpgradeable__factory {
    return super.connect(signer) as ControllableUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllableUpgradeableInterface {
    return new utils.Interface(_abi) as ControllableUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ControllableUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ControllableUpgradeable;
  }
}
